<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:controlzEx="urn:controlzex"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:scalableicons="clr-namespace:ModernThemables.ScalableIcons">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="WindowTitle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ThemableWindow2" TargetType="{x:Type controls:ThemableWindow2}">
		<Border
			x:Name="PART_Border"
			Margin="{TemplateBinding Padding}"
			Background="{TemplateBinding Background}"
			BorderThickness="{TemplateBinding BorderThickness}"
			UseLayoutRounding="True">
			<AdornerDecorator UseLayoutRounding="False">
				<Grid
					Background="{x:Null}"
					LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
					RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					UseLayoutRounding="False">
					<Grid>
						<Grid.ColumnDefinitions>
							<!--  icon  -->
							<ColumnDefinition Width="Auto" />
							<!--  left window commands, title, right window commands  -->
							<ColumnDefinition Width="*" />
							<!--  min,max,close buttons  -->
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Rectangle
							x:Name="PART_WindowTitleBackground"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							Fill="{TemplateBinding WindowTitleBrush}"
							Focusable="False"
							StrokeThickness="0" />

						<!--  icon  -->
						<ContentControl
							x:Name="PART_Icon"
							Grid.Row="0"
							Grid.Column="0"
							Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							Panel.ZIndex="1"
							controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
							Content="{TemplateBinding Icon}"
							ContentTemplate="{TemplateBinding IconTemplate}"
							Focusable="False"
							Visibility="{TemplateBinding ShowIconOnTitleBar,
							                             Converter={StaticResource VisibleIfTrueConverter}}" />

						<mah:MetroThumb
							x:Name="PART_WindowTitleThumb"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							Style="{StaticResource WindowTitle}"
							UseLayoutRounding="True" />

						<DockPanel
							Grid.Row="0"
							Grid.Column="1"
							VerticalAlignment="Top"
							Focusable="False">
							<!--  the left window commands  -->
							<ContentPresenter
								x:Name="PART_LeftWindowCommands"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								VerticalAlignment="Top"
								Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Left"
								Focusable="False" />
							<!--  the right window commands  -->
							<ContentPresenter
								x:Name="PART_RightWindowCommands"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								VerticalAlignment="Top"
								Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Right"
								Focusable="False" />
							<!--  the title bar  -->
							<mah:MetroThumbContentControl
								x:Name="PART_TitleBar"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								HorizontalAlignment="{TemplateBinding TitleAlignment}"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Content="{TemplateBinding Title}"
								ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
								ContentTemplate="{TemplateBinding TitleTemplate}"
								Focusable="False">
								<!--<ContentControl.Foreground>
									<MultiBinding Converter="{x:Static mahConverters:BackgroundToForegroundConverter.Instance}">
										<Binding
											ElementName="PART_WindowTitleBackground"
											Mode="OneWay"
											Path="Fill" />
										<Binding
											Mode="OneWay"
											Path="TitleForeground"
											RelativeSource="{RelativeSource TemplatedParent}" />
									</MultiBinding>
								</ContentControl.Foreground>-->
							</mah:MetroThumbContentControl>
						</DockPanel>

						<!--  the window button commands  -->
						<ContentPresenter
							x:Name="PART_WindowButtonCommands"
							Grid.Row="0"
							Grid.RowSpan="2"
							Grid.Column="2"
							Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							VerticalAlignment="Top"
							Panel.ZIndex="1"
							Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							Focusable="False" />

						<!--  the main window content  -->
						<ContentPresenter
							x:Name="PART_Content"
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							FocusVisualStyle="{x:Null}"
							UseLayoutRounding="False" />

					</Grid>
				</Grid>
			</AdornerDecorator>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="ShowTitleBar" Value="False">
				<!--<Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />-->
			</Trigger>
			<!--  handle active/inactive state  -->
			<Trigger Property="IsActive" Value="False">
				<!--<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowColor, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static mahConverters:ColorToSolidColorBrushConverter.DefaultInstance}}" />
				<Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="False" />
					<Condition Property="NonActiveGlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="True" />
					<Condition Property="GlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
					<Condition Property="WindowState" Value="Normal" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
		</ControlTemplate.Triggers>

	</ControlTemplate>

	<Style TargetType="{x:Type controls:ThemableWindow2}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template" Value="{StaticResource ThemableWindow2}" />
		<Setter Property="TitleTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock
						Margin="8,-1,1,0"
						VerticalAlignment="Center"
						Text="{TemplateBinding Content}"
						TextTrimming="CharacterEllipsis" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={StaticResource IsNullConverter}}" Value="False">
				<Setter Property="IconTemplate">
					<Setter.Value>
						<DataTemplate>
							<mah:MultiFrameImage
								Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}"
								MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								Source="{TemplateBinding Content}" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type controls:ThemableWindow}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ThemableWindow}">
					<Grid x:Name="RootGrid" Focusable="False">
						<Grid.Background>
							<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
								<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
								<Binding ElementName="ThemeMouseOverBorder" Path="Background" />
								<Binding ElementName="DisabledControlClickablePartBorder" Path="Background" />
							</MultiBinding>
						</Grid.Background>
						<Grid
							Height="30"
							Margin="1"
							VerticalAlignment="Top">
							<Grid.Background>
								<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
									<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding ElementName="ThemeBorder" Path="Background" />
									<Binding ElementName="StatusTextLightBorder" Path="Background" />
								</MultiBinding>
							</Grid.Background>
						</Grid>
						<Grid
							x:Name="PART_ContentGrid"
							Margin="1,31,1,1"
							Background="{DynamicResource MainBackgroundBrush}"
							Focusable="False">
							<ContentPresenter x:Name="Content" />
						</Grid>
						<controls:ExtendedButton
							x:Name="PART_BlackoutGrid"
							Margin="0,31,0,0"
							Background="Black"
							BorderThickness="0"
							Focusable="False"
							IsHitTestVisible="False"
							MouseDownColour="Black"
							MouseOverColour="Black"
							Opacity="0" />
						<Grid
							x:Name="PART_SettingsGrid"
							Width="Auto"
							Height="Auto"
							Margin="1,31,1,1"
							ClipToBounds="False"
							Focusable="False"
							IsEnabled="False"
							IsHitTestVisible="False">
							<Border
								x:Name="PART_SettingsBorder"
								Width="Auto"
								Height="Auto"
								Margin="0,-170,6,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="{DynamicResource MenuBrush}"
								BorderBrush="{DynamicResource MenuBorderBrush}"
								BorderThickness="1"
								CornerRadius="5"
								Focusable="False">
								<Border.Effect>
									<DropShadowEffect
										x:Name="PART_SettingsDropShadow"
										BlurRadius="30"
										ShadowDepth="0"
										Color="Black" />
								</Border.Effect>
								<Grid>
									<controls:BlurHost
										x:Name="Blurrer"
										BlurBackground="{Binding ElementName=Content}"
										BlurOpacity="0.5"
										Focusable="False"
										PreventResample="{Binding ElementName=PART_SettingsGrid, Path=IsEnabled, Converter={StaticResource BoolInverter}}"
										RedrawTrigger="{Binding ElementName=PART_SettingsBorder, Path=Margin, UpdateSourceTrigger=PropertyChanged}">
										<controls:ThemingControl
											x:Name="PART_ThemingControl"
											Width="Auto"
											Height="Auto"
											Margin="0,0,40,0"
											HorizontalAlignment="Center"
											VerticalAlignment="Bottom" />
									</controls:BlurHost>
									<controls:ExtendedButton
										x:Name="PART_SettingsCloseButton"
										Width="40"
										Height="30"
										Margin="0"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										Background="Transparent"
										BorderThickness="0"
										CornerRadius="0,5,0,5"
										DisabledBackgroundColour="Transparent"
										MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
										MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
										<scalableicons:CloseIcon
											Width="10"
											Height="10"
											Foreground="{DynamicResource TextBrush}" />
									</controls:ExtendedButton>
								</Grid>
							</Border>
						</Grid>
						<Grid
							x:Name="HeaderGrid"
							Height="31"
							Margin="0"
							VerticalAlignment="Top">
							<DockPanel>
								<controls:ExtendedButton
									x:Name="PART_CloseButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White"
									MouseDownColour="DarkRed"
									MouseOverColour="#e81123">
									<scalableicons:CloseIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<controls:ExtendedButton
									x:Name="PART_ChangeStateButton"
									Width="40"
									Margin="1,1,1,0"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<Grid Width="10" Height="10">
										<scalableicons:MaximiseIcon Foreground="{DynamicResource ThemeTextBrush}" Tag="MaximiseBorder" />
										<scalableicons:RestoreIcon
											Foreground="{DynamicResource ThemeTextBrush}"
											Tag="RestoreDownGrid"
											Visibility="Collapsed" />
									</Grid>
								</controls:ExtendedButton>
								<controls:ExtendedButton
									x:Name="PART_MinimiseButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<scalableicons:MinimiseIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<Border
									x:Name="PART_Splitter"
									Width="1"
									Margin="1,4,1,4"
									HorizontalAlignment="Right"
									Background="{DynamicResource ThemeDisabledTextBrush}"
									DockPanel.Dock="Right" />
								<controls:ExtendedButton
									x:Name="PART_ThemeSetButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="True"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<scalableicons:ExpandIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<Image
									Width="Auto"
									Margin="9,8,0,8"
									Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
								<Label
									Margin="2"
									VerticalAlignment="Center"
									VerticalContentAlignment="Center"
									Content="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
									FontSize="11.5">
									<Label.Foreground>
										<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
											<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
											<Binding ElementName="ThemeTextBorder" Path="Background" />
											<Binding ElementName="ThemeDisabledBorder" Path="Background" />
										</MultiBinding>
									</Label.Foreground>
								</Label>
							</DockPanel>
						</Grid>
						<Border
							x:Name="ThemeBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeMouseOverBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeMouseOverBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeTextBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeTextBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeDisabledBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeDisabledTextBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="StatusTextLightBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource StatusTextLightBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="DisabledControlClickablePartBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource DisabledControlClickablePartBrush}"
							Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
