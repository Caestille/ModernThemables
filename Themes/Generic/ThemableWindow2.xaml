<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:controlzEx="urn:controlzex"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:scalableicons="clr-namespace:ModernThemables.ScalableIcons">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Converters.xaml" />
		<ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="WindowTitle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleBarButton" TargetType="{x:Type controls:ExtendedButton}">
		<Setter Property="Width" Value="40" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Margin" Value="1,1,1,0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
		<Setter Property="MouseOverColour">
			<Setter.Value>
				<SolidColorBrush Opacity="0.3" Color="White" />
			</Setter.Value>
		</Setter>
		<Setter Property="MouseDownColour">
			<Setter.Value>
				<SolidColorBrush Opacity="0.3" Color="Black" />
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ThemableWindow2" TargetType="{x:Type controls:ThemableWindow2}">
		<Border
			x:Name="PART_Border"
			Margin="{TemplateBinding Padding}"
			Background="{TemplateBinding Background}"
			BorderThickness="{TemplateBinding BorderThickness}"
			UseLayoutRounding="True">
			<AdornerDecorator UseLayoutRounding="False">
				<Grid
					Background="{x:Null}"
					LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
					RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					UseLayoutRounding="False">
					<Grid>
						<Grid.ColumnDefinitions>
							<!--  icon  -->
							<ColumnDefinition Width="Auto" />
							<!--  left window commands, title, right window commands  -->
							<ColumnDefinition Width="*" />
							<!--  min,max,close buttons  -->
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Rectangle
							x:Name="PART_WindowTitleBackground"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							Fill="{TemplateBinding WindowTitleBrush}"
							Focusable="False"
							StrokeThickness="0" />

						<!--  icon  -->
						<ContentControl
							x:Name="PART_Icon"
							Grid.Row="0"
							Grid.Column="0"
							Width="20"
							Height="20"
							Margin="8,0,0,0"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							Panel.ZIndex="1"
							controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
							Content="{TemplateBinding Icon}"
							ContentTemplate="{TemplateBinding IconTemplate}"
							Focusable="False"
							Visibility="{TemplateBinding ShowIconOnTitleBar,
							                             Converter={StaticResource VisibleIfTrueConverter}}" />

						<mah:MetroThumb
							x:Name="PART_WindowTitleThumb"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							Style="{StaticResource WindowTitle}"
							UseLayoutRounding="True" />

						<DockPanel
							Grid.Row="0"
							Grid.Column="1"
							VerticalAlignment="Top"
							Focusable="False">
							<!--  the title bar  -->
							<mah:MetroThumbContentControl
								x:Name="PART_TitleBar"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								Margin="0,1,0,-1"
								HorizontalAlignment="{TemplateBinding TitleAlignment}"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Content="{TemplateBinding Title}"
								ContentTemplate="{TemplateBinding TitleTemplate}"
								Focusable="False" />
						</DockPanel>

						<!--  the window button commands  -->
						<Grid
							x:Name="PART_WindowButtonCommands"
							Grid.Row="0"
							Grid.RowSpan="2"
							Grid.Column="2"
							Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							Margin="-1"
							VerticalAlignment="Top"
							Panel.ZIndex="1"
							Focusable="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<controls:ExtendedButton
								x:Name="PART_CloseButton"
								Grid.Column="4"
								MouseDownColour="DarkRed"
								MouseOverColour="#e81123"
								Style="{StaticResource TitleBarButton}">
								<scalableicons:CloseIcon
									Width="10"
									Height="10"
									Foreground="{DynamicResource ThemeTextBrush}" />
							</controls:ExtendedButton>
							<controls:ExtendedButton
								x:Name="PART_ChangeStateButton"
								Grid.Column="3"
								Style="{StaticResource TitleBarButton}">
								<Grid Width="10" Height="10">
									<scalableicons:MaximiseIcon Foreground="{DynamicResource ThemeTextBrush}" Tag="MaximiseBorder" />
									<scalableicons:RestoreIcon
										Foreground="{DynamicResource ThemeTextBrush}"
										Tag="RestoreDownGrid"
										Visibility="Collapsed" />
								</Grid>
							</controls:ExtendedButton>
							<controls:ExtendedButton
								x:Name="PART_MinimiseButton"
								Grid.Column="2"
								Style="{StaticResource TitleBarButton}">
								<scalableicons:MinimiseIcon
									Width="10"
									Height="10"
									Foreground="{DynamicResource ThemeTextBrush}" />
							</controls:ExtendedButton>
							<Border
								x:Name="PART_Splitter"
								Grid.Column="1"
								Width="1"
								Margin="1,4,1,4"
								Background="{DynamicResource ThemeDisabledTextBrush}" />
							<controls:ExtendedButton x:Name="PART_ThemeSetButton" Style="{StaticResource TitleBarButton}">
								<scalableicons:ExpandIcon
									Width="10"
									Height="10"
									Foreground="{DynamicResource ThemeTextBrush}" />
							</controls:ExtendedButton>
						</Grid>

						<!--  the main window content  -->
						<ContentPresenter
							x:Name="PART_Content"
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							FocusVisualStyle="{x:Null}"
							UseLayoutRounding="False" />

					</Grid>
				</Grid>
			</AdornerDecorator>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="ShowTitleBar" Value="False">
				<Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
			</Trigger>
			<!--  handle active/inactive state  -->
			<Trigger Property="IsActive" Value="False">
				<!--<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowColor, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static mahConverters:ColorToSolidColorBrushConverter.DefaultInstance}}" />-->
				<Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="False" />
					<Condition Property="NonActiveGlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="True" />
					<Condition Property="GlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
					<Condition Property="WindowState" Value="Normal" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
		</ControlTemplate.Triggers>

	</ControlTemplate>

	<Style TargetType="{x:Type controls:ThemableWindow2}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="TitleBarHeight" Value="31" />
		<Setter Property="GlowDepth" Value="1" />
		<Setter Property="GlowColor" Value="{DynamicResource ThemeMouseOverColour}" />
		<Setter Property="NonActiveGlowColor" Value="{DynamicResource DisabledControlClickablePartColour}" />
		<Setter Property="WindowTitleBrush" Value="{DynamicResource ThemeBrush}" />
		<Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource StatusTextLightBrush}" />
		<Setter Property="Template" Value="{StaticResource ThemableWindow2}" />
		<Setter Property="TitleTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock
						Margin="8,-1,1,0"
						VerticalAlignment="Center"
						Text="{TemplateBinding Content}"
						TextTrimming="CharacterEllipsis">
						<TextBlock.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}" Value="False">
										<Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeDisabledTextBrush}" />
									</DataTrigger>
									<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}" Value="True">
										<Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeTextBrush}" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={StaticResource IsNullConverter}}" Value="False">
				<Setter Property="IconTemplate">
					<Setter.Value>
						<DataTemplate>
							<mah:MultiFrameImage
								Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}"
								MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								Source="{TemplateBinding Content}" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
