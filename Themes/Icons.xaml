<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:icons="clr-namespace:ModernThemables.ScalableIcons"
    xmlns:metroIcons="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Generic.xaml" />
        <ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type icons:AnimatedMenuOpenCloseIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:AnimatedMenuOpenCloseIcon}">
                    <Grid>
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2">
                            <Border.RenderTransform>
                                <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
                            </Border.RenderTransform>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type icons:BaseIcon}}, Path=(icons:BaseIcon.IsVisuallyDisabled)}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                                            From="0"
                                                            To="45"
                                                            Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                                            From="45"
                                                            To="0"
                                                            Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            Margin="0,3,0,0"
                            VerticalAlignment="Top"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2">
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type icons:BaseIcon}}, Path=(icons:BaseIcon.IsVisuallyDisabled)}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="Margin"
                                                            From="0,3,0,0"
                                                            To="25,3,0,0"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="Margin"
                                                            From="25,3,0,0"
                                                            To="0,3,0,0"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            Margin="0,0,0,2"
                            VerticalAlignment="Bottom"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2">
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type icons:BaseIcon}}, Path=(icons:BaseIcon.IsVisuallyDisabled)}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="Margin"
                                                            From="0,0,0,2"
                                                            To="0,0,27,2"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ThicknessAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="Margin"
                                                            From="0,0,27,2"
                                                            To="0,0,0,2"
                                                            Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2">
                            <Border.RenderTransform>
                                <RotateTransform Angle="0" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
                            </Border.RenderTransform>
                            <Border.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type icons:BaseIcon}}, Path=(icons:BaseIcon.IsVisuallyDisabled)}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                                            From="0"
                                                            To="-45"
                                                            Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            AutoReverse="False"
                                                            Storyboard.TargetProperty="RenderTransform.Angle"
                                                            From="-45"
                                                            To="0"
                                                            Duration="0:0:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:BinIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:BinIcon}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.4*" />
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="0.15*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.15*" />
                            <RowDefinition Height="0.1*" />
                            <RowDefinition Height="0.375*" />
                            <RowDefinition Height="0.375*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="2" Background="{TemplateBinding Foreground}" />
                        <Border
                            Grid.Row="1"
                            Grid.ColumnSpan="5"
                            Background="{TemplateBinding Foreground}" />
                        <Border
                            Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="3"
                            Margin="0,1,0,0"
                            Background="{TemplateBinding Foreground}" />
                        <Border
                            Grid.Row="2"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="3"
                            Margin="0,1,0,0"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="{Binding ElementName=Grid, Path=ActualWidth, ConverterParameter=0.15, Converter={StaticResource ValueMultiplierConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:BuildingIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:BuildingIcon}">
					<Viewbox>
						<metroIcons:PackIconMaterial
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Bank" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:CalculatorIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:CalculatorIcon}">
					<Viewbox>
						<metroIcons:PackIconBoxIcons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="SolidCalculator" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:CalendarIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:CalendarIcon}">
					<Viewbox>
						<metroIcons:PackIconModern
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Calendar" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:CloseIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:CloseIcon}">
                    <Grid x:Name="Grid">
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="0"
                            X2="{Binding ElementName=Grid, Path=ActualWidth}"
                            Y1="0"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="0"
                            X2="{Binding ElementName=Grid, Path=ActualWidth}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight}"
                            Y2="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:CollapseIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:CollapseIcon}">
                    <Grid x:Name="Grid" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <RotateTransform Angle="180" />
                        </Grid.RenderTransform>
                        <icons:ExpandIcon />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:DownloadIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:DownloadIcon}">
					<Viewbox>
						<metroIcons:PackIconMaterial
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Download" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:ExpandIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:ExpandIcon}">
                    <Grid x:Name="Grid">
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="0"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.51}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.25}"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.75}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.49}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.75}"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.25}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:GearIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:GearIcon}">
					<Viewbox>
						<metroIcons:PackIconMaterial
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Cog" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:GraphIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:GraphIcon}">
					<Viewbox>
						<metroIcons:PackIconVaadinIcons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="LineBarChart" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:MagnifyingGlassIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:MagnifyingGlassIcon}">
                    <Grid x:Name="Grid">
                        <Border
                            Width="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.7}"
                            Height="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.7}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding StrokeThickness,
                                                              Converter={StaticResource ValueMultiplierConverter},
                                                              ConverterParameter=0.66}"
                            CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.58}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.9}"
                            Y1="{Binding RelativeSource={RelativeSource Self}, Path=X1}"
                            Y2="{Binding RelativeSource={RelativeSource Self}, Path=X2}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:MaximiseIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:MaximiseIcon}">
                    <Border
                        BorderBrush="{DynamicResource ThemeTextBrush}"
                        BorderThickness="{TemplateBinding StrokeThickness,
                                                          Converter={StaticResource DoubleToBorderThicknessConverter},
                                                          ConverterParameter=1-1-1-1}"
                        CornerRadius="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:MenuIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:MenuIcon}">
                    <Grid>
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            VerticalAlignment="Top"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2" />
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2" />
                        <Border
                            Height="{TemplateBinding StrokeThickness}"
                            VerticalAlignment="Bottom"
                            Background="{TemplateBinding Foreground}"
                            CornerRadius="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:MinimiseIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:MinimiseIcon}">
                    <Border BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding StrokeThickness, Converter={StaticResource DoubleToBorderThicknessConverter}, ConverterParameter=0-0-0-1}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:MonitorIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:MonitorIcon}">
					<Viewbox>
						<metroIcons:PackIconMaterial
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="DesktopMacDashboard" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:MoonIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:MoonIcon}">
					<Viewbox>
						<metroIcons:PackIconEvaIcons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Moon" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:OpenFileIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:OpenFileIcon}">
					<Viewbox>
						<metroIcons:PackIconForkAwesome
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="FolderOpen" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:PenIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:PenIcon}">
					<Viewbox>
						<metroIcons:PackIconZondicons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="EditPencil" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:PinIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:PinIcon}">
                    <Grid x:Name="Grid">
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="Triangle"
                            StrokeThickness="2"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-10}"
                            X2="7"
                            Y1="10"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="Triangle"
                            StrokeThickness="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.45}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.55}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeThickness="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.2}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.7}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.3}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeThickness="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.27}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-9}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
                            Y2="9" />
                        <Grid Tag="DisablePinLine" Visibility="{TemplateBinding IsVisuallyDisabled, Converter={StaticResource VisibleIfTrueConverter}}">
                            <Line
                                Stroke="{TemplateBinding Background}"
                                StrokeThickness="6"
                                X1="5"
                                X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-5}"
                                Y1="5"
                                Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-5}" />
                            <Line
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="1.5"
                                X1="7"
                                X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}"
                                Y1="7"
                                Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:PlayIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:PlayIcon}">
					<Viewbox>
						<metroIcons:PackIconFontisto
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Play" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:PlusIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:PlusIcon}">
                    <Grid x:Name="Grid">
                        <Line
                            IsHitTestVisible="False"
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
                            Y1="0"
                            Y2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=0}" />
                        <Line
                            IsHitTestVisible="False"
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="0"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=0}"
                            Y1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
                            Y2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type icons:RestoreIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:RestoreIcon}">
                    <Grid>
                        <Border
                            Margin="0,2,2,0"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding StrokeThickness,
                                                              Converter={StaticResource DoubleToBorderThicknessConverter}}"
                            CornerRadius="1" />
                        <Border
                            Margin="2,0,0,2"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="{TemplateBinding StrokeThickness,
                                                              Converter={StaticResource DoubleToBorderThicknessConverter},
                                                              ConverterParameter=0-1-1-0}"
                            CornerRadius="0,1,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type icons:SaveIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:SaveIcon}">
					<Viewbox>
						<metroIcons:PackIconRemixIcon
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="SaveFill" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:SunIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:SunIcon}">
					<Viewbox>
						<metroIcons:PackIconEvaIcons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="Sun" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type icons:TagIcon}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type icons:TagIcon}">
					<Viewbox>
						<metroIcons:PackIconIonicons
							Width="50"
							Height="50"
							Background="{TemplateBinding Background}"
							Foreground="{TemplateBinding Foreground}"
							Kind="PricetagMD" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type icons:TickIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type icons:TickIcon}">
                    <Grid x:Name="Grid">
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeStartLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="0"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.333}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
                            Y2="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=1}" />
                        <Line
                            Stroke="{TemplateBinding Foreground}"
                            StrokeEndLineCap="{TemplateBinding StrokeStyle}"
                            StrokeThickness="{TemplateBinding StrokeThickness}"
                            X1="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.333}"
                            X2="{Binding ElementName=Grid, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=1}"
                            Y1="{Binding ElementName=Grid, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=1}"
                            Y2="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>