<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:converters="clr-namespace:ModernThemables.Converters"
	xmlns:helperclasses="clr-namespace:CoreUtilities.HelperClasses;assembly=CoreUtilities">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<helperclasses:BindingProxy x:Key="proxy" Data="{Binding}" />

	<!--#region Application colours-->

	<SolidColorBrush x:Key="MainBackgroundBrush" Color="Black" />
	<SolidColorBrush x:Key="TextBrush" Color="White" />
	<Color x:Key="TextColour" />
	<Color x:Key="InvertedTextColour" />
	<SolidColorBrush x:Key="InvertedTextBrush" Color="White" />
	<SolidColorBrush x:Key="StatusTextBrush" Color="DarkGray" />
	<SolidColorBrush x:Key="StatusTextLightBrush" Color="#282828" />
	<SolidColorBrush x:Key="MenuBrush" Color="#1e1e1e" />
	<SolidColorBrush x:Key="MenuBorderBrush" Color="#1e1e1e" />
	<SolidColorBrush x:Key="MenuMouseOverBrush" Color="#1e1e1e" />
	<SolidColorBrush x:Key="MenuMouseDownBrush" Color="#1e1e1e" />
	<SolidColorBrush x:Key="ControlClickablePartBrush" Color="#8c8c8c" />
	<SolidColorBrush x:Key="ControlClickablePartMouseOverBrush" Color="#969696" />
	<SolidColorBrush x:Key="ControlClickablePartMouseDownBrush" Color="#646464" />
	<SolidColorBrush x:Key="ControlNonClickablePartBrush" Color="#505050" />
	<SolidColorBrush x:Key="DisabledControlClickablePartBrush" Color="#282828" />
	<SolidColorBrush x:Key="DisabledControlNonClickablePartBrush" Color="#3c3c3c" />
	<SolidColorBrush x:Key="ThemeBrush" Color="#2f2f4a" />
	<SolidColorBrush x:Key="ThemeMouseOverBrush" Color="#3d3d5f" />
	<SolidColorBrush x:Key="ThemeMouseDownBrush" Color="#2f2f4a" />
	<SolidColorBrush x:Key="ThemeBackgroundBrush" Color="#26263b" />
	<SolidColorBrush x:Key="ThemeTextBrush" Color="White" />
	<SolidColorBrush x:Key="ThemeStatusBrush" Color="DimGray" />
	<SolidColorBrush x:Key="ThemeDisabledTextBrush" Color="Gray" />
	<SolidColorBrush x:Key="ThemeNearBackgroundBrush" Color="Gray" />
	<SolidColorBrush x:Key="ThemeBackgroundNearBackgroundBrush" Color="Gray" />
	<SolidColorBrush x:Key="ThemeMouseOverNearBackgroundBrush" Color="Gray" />
	<SolidColorBrush x:Key="ThemeMouseDownNearBackgroundBrush" Color="Gray" />
	<SolidColorBrush x:Key="ButtonForegroundBrush" Color="DarkGray" />

	<!--#endregion End Application colours-->

	<!--#region Converters-->

	<converters:CentreToolTipConverter x:Key="CentreToolTipConverter" />
	<converters:ColourRgbConverter x:Key="ColourRgbConverter" />
	<converters:RoundedGeometryGroupConverter x:Key="RoundedGeometryGroupConverter" />
	<converters:DoubleToBorderThicknessConverter x:Key="DoubleToBorderThicknessConverter" />
	<converters:ChartZoomConverter x:Key="ChartZoomConverter" />

	<!--#endregion End Converters-->

	<Style x:Key="ThemableFocusStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<Border
							Margin="-3"
							Background="{DynamicResource StatusTextBrush}"
							CornerRadius="3"
							Opacity="0.2"
							SnapsToDevicePixels="true" />
						<Border
							Margin="-3"
							Background="Transparent"
							BorderBrush="{DynamicResource StatusTextBrush}"
							BorderThickness="1"
							CornerRadius="3"
							SnapsToDevicePixels="true" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type controls:BlurHost}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BlurHost}">
					<Grid>
						<!--  Blur layer beneath the hosted element (ContentPresenter)  -->
						<Border
							x:Name="PART_BlurDecorator"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" />
						<ContentPresenter />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource ResourceKey={x:Type Button}}" TargetType="{x:Type controls:ExtendedButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MouseOverColour" Value="Transparent" />
		<Setter Property="MouseDownColour" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExtendedButton}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefaulted" Value="true">
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />-->
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseOverColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />-->
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseDownColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />-->
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{Binding DisabledBackgroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />-->
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding DisabledForegroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource ResourceKey={x:Type ToggleButton}}" TargetType="{x:Type controls:ExtendedToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="MouseOverColour" Value="Transparent" />
		<Setter Property="MouseDownColour" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ExtendedToggleButton}">
					<Border
						x:Name="border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseOverColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />-->
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{Binding CheckedColour, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseDownColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />-->
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="border" Property="Background" Value="{Binding DisabledBackgroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />-->
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding DisabledForegroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#region Base range slider-->

	<Style x:Key="DefaultRangeStyle" TargetType="{x:Type RepeatButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle x:Name="MainBorder" Fill="{TemplateBinding Background}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
		<Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
			<Track.Thumb>
				<Thumb
					x:Name="thumb"
					Background="{TemplateBinding Background}"
					Focusable="True" />
			</Track.Thumb>
		</Track>
	</ControlTemplate>

	<Style TargetType="{x:Type controls:RangeSlider}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RangeSlider}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Grid.RowDefinitions>
								<RowDefinition x:Name="TopRow" Height="0" />
								<RowDefinition Height="Auto" />
								<RowDefinition x:Name="BottomRow" Height="0" />
							</Grid.RowDefinitions>

							<RepeatButton
								x:Name="PART_MidRange"
								Grid.Row="1"
								Width="{TemplateBinding RangeWidth}"
								Height="5"
								Margin="{TemplateBinding RangeMargin}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								SnapsToDevicePixels="True"
								Style="{StaticResource DefaultRangeStyle}" />

							<Slider
								x:Name="PART_LowerSlider"
								Grid.Row="1"
								AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
								AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
								Focusable="False"
								Template="{StaticResource SliderTemplate}" />

							<Slider
								x:Name="PART_HigherSlider"
								Grid.Row="1"
								AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
								AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
								Focusable="False"
								Template="{StaticResource SliderTemplate}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

</ResourceDictionary>
