<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:chartConverters="clr-namespace:ModernThemables.Charting.Converters"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:controlzEx="urn:controlzex"
	xmlns:converters="clr-namespace:ModernThemables.Converters"
	xmlns:helperclasses="clr-namespace:CoreUtilities.HelperClasses;assembly=CoreUtilities"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:scalableicons="clr-namespace:ModernThemables.ScalableIcons">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <helperclasses:BindingProxy x:Key="proxy" Data="{Binding}" />

    <!--#region Application colours-->

    <SolidColorBrush x:Key="MainBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="TextBrush" Color="White" />
    <Color x:Key="TextColour" />
    <Color x:Key="InvertedTextColour" />
    <SolidColorBrush x:Key="InvertedTextBrush" Color="White" />
    <SolidColorBrush x:Key="StatusTextBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="StatusTextLightBrush" Color="#282828" />
    <SolidColorBrush x:Key="MenuBrush" Color="#1e1e1e" />
    <SolidColorBrush x:Key="MenuBorderBrush" Color="#1e1e1e" />
    <SolidColorBrush x:Key="MenuMouseOverBrush" Color="#1e1e1e" />
    <SolidColorBrush x:Key="MenuMouseDownBrush" Color="#1e1e1e" />
    <SolidColorBrush x:Key="ControlClickablePartBrush" Color="#8c8c8c" />
    <SolidColorBrush x:Key="ControlClickablePartMouseOverBrush" Color="#969696" />
    <SolidColorBrush x:Key="ControlClickablePartMouseDownBrush" Color="#646464" />
    <SolidColorBrush x:Key="ControlNonClickablePartBrush" Color="#505050" />
    <SolidColorBrush x:Key="DisabledControlClickablePartBrush" Color="#282828" />
    <SolidColorBrush x:Key="DisabledControlNonClickablePartBrush" Color="#3c3c3c" />
    <SolidColorBrush x:Key="ThemeBrush" Color="#2f2f4a" />
    <SolidColorBrush x:Key="ThemeMouseOverBrush" Color="#3d3d5f" />
    <SolidColorBrush x:Key="ThemeMouseDownBrush" Color="#2f2f4a" />
    <SolidColorBrush x:Key="ThemeBackgroundBrush" Color="#26263b" />
    <SolidColorBrush x:Key="ThemeTextBrush" Color="White" />
    <SolidColorBrush x:Key="ThemeStatusBrush" Color="DimGray" />
    <SolidColorBrush x:Key="ThemeDisabledTextBrush" Color="Gray" />
    <SolidColorBrush x:Key="ThemeNearBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="ThemeBackgroundNearBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="ThemeMouseOverNearBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="ThemeMouseDownNearBackgroundBrush" Color="Gray" />
    <SolidColorBrush x:Key="ButtonForegroundBrush" Color="DarkGray" />

    <!--#endregion End Application colours-->

    <!--#region Converters-->

	<chartConverters:CentreToolTipConverter x:Key="CentreToolTipConverter" />
	<chartConverters:PointToolTipConverter x:Key="PointToolTipConverter" />
	<converters:ColourRgbConverter x:Key="ColourRgbConverter" />
	<converters:ColourRgbTextConverter x:Key="ColourRgbTextConverter" />
	<converters:RoundedGeometryGroupConverter x:Key="RoundedGeometryGroupConverter" />
	<converters:DoubleToBorderThicknessConverter x:Key="DoubleToBorderThicknessConverter" />
	<converters:MultiBindingDoubleToBorderThicknessConverter x:Key="MultiBindingDoubleToBorderThicknessConverter" />
	<chartConverters:ChartZoomConverter x:Key="ChartZoomConverter" />
	<chartConverters:SeriesHeightMarginConverter x:Key="SeriesHeightMarginConverter" />
	<chartConverters:SeriesOverlapMarginConverter x:Key="SeriesOverlapMarginConverter" />
	<chartConverters:PieCentreRadiusConverter x:Key="PieCentreRadiusConverter" />
	<chartConverters:PieLabelMarginConverter x:Key="PieLabelMarginConverter" />
	<chartConverters:PieCentrererConverter x:Key="PieCentrererConverter" />
	<chartConverters:AxisLabelMarginConverter x:Key="AxisLabelMarginConverter" />
	<chartConverters:PointHighlightMarginConverter x:Key="PointHighlightMarginConverter" />

	<!--#endregion End Converters-->

	<Style x:Key="MahApps.Styles.Thumb.WindowTitle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ThemableWindow2" TargetType="{x:Type controls:ThemableWindow2}">
		<Border
			x:Name="PART_Border"
			Margin="{TemplateBinding Padding}"
			Background="{TemplateBinding Background}"
			BorderThickness="{TemplateBinding BorderThickness}"
			UseLayoutRounding="True">
			<AdornerDecorator UseLayoutRounding="False">
				<Grid
					Background="{x:Null}"
					LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
					RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					UseLayoutRounding="False">
					<Grid>
						<Grid.ColumnDefinitions>
							<!--  icon  -->
							<ColumnDefinition Width="Auto" />
							<!--  left window commands, title, right window commands  -->
							<ColumnDefinition Width="*" />
							<!--  min,max,close buttons  -->
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Rectangle
							x:Name="PART_WindowTitleBackground"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							Fill="{TemplateBinding WindowTitleBrush}"
							Focusable="False"
							StrokeThickness="0" />

						<!--  icon  -->
						<ContentControl
							x:Name="PART_Icon"
							Grid.Row="0"
							Grid.Column="0"
							Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							MinWidth="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							Panel.ZIndex="1"
							controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
							Content="{TemplateBinding Icon}"
							ContentTemplate="{TemplateBinding IconTemplate}"
							Focusable="False"
							Visibility="{TemplateBinding ShowIconOnTitleBar,
							                             Converter={StaticResource VisibleIfTrueConverter}}" />

						<mah:MetroThumb
							x:Name="PART_WindowTitleThumb"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							UseLayoutRounding="True" />

						<DockPanel
							Grid.Row="0"
							Grid.Column="1"
							VerticalAlignment="Top"
							Focusable="False">
							<!--  the left window commands  -->
							<ContentPresenter
								x:Name="PART_LeftWindowCommands"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								VerticalAlignment="Top"
								Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Left"
								Focusable="False" />
							<!--  the right window commands  -->
							<ContentPresenter
								x:Name="PART_RightWindowCommands"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								VerticalAlignment="Top"
								Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Right"
								Focusable="False" />
							<!--  the title bar  -->
							<mah:MetroThumbContentControl
								x:Name="PART_TitleBar"
								Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								HorizontalAlignment="{TemplateBinding TitleAlignment}"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Content="{TemplateBinding Title}"
								ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
								ContentTemplate="{TemplateBinding TitleTemplate}"
								Focusable="False">
								<!--<ContentControl.Foreground>
									<MultiBinding Converter="{x:Static mahConverters:BackgroundToForegroundConverter.Instance}">
										<Binding
											ElementName="PART_WindowTitleBackground"
											Mode="OneWay"
											Path="Fill" />
										<Binding
											Mode="OneWay"
											Path="TitleForeground"
											RelativeSource="{RelativeSource TemplatedParent}" />
									</MultiBinding>
								</ContentControl.Foreground>-->
							</mah:MetroThumbContentControl>
						</DockPanel>

						<!--  the window button commands  -->
						<ContentPresenter
							x:Name="PART_WindowButtonCommands"
							Grid.Row="0"
							Grid.RowSpan="2"
							Grid.Column="2"
							Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							VerticalAlignment="Top"
							Panel.ZIndex="1"
							Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							Focusable="False" />

						<!--  the main window content  -->
						<ContentPresenter
							x:Name="PART_Content"
							Grid.Row="1"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							FocusVisualStyle="{x:Null}"
							UseLayoutRounding="False" />

					</Grid>
				</Grid>
			</AdornerDecorator>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="ShowTitleBar" Value="False">
				<!--<Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />-->
			</Trigger>
			<!--  handle active/inactive state  -->
			<Trigger Property="IsActive" Value="False">
				<!--<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowColor, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static mahConverters:ColorToSolidColorBrushConverter.DefaultInstance}}" />
				<Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />-->
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="False" />
					<Condition Property="NonActiveGlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="True" />
					<Condition Property="GlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
					<Condition Property="WindowState" Value="Normal" />
				</MultiTrigger.Conditions>
			</MultiTrigger>
		</ControlTemplate.Triggers>

	</ControlTemplate>

	<Style TargetType="{x:Type controls:ThemableWindow2}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template" Value="{StaticResource ThemableWindow2}" />
		<Setter Property="TitleTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock
						Margin="8,-1,1,0"
						VerticalAlignment="Center"
						Text="{TemplateBinding Content}"
						TextTrimming="CharacterEllipsis" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={StaticResource IsNullConverter}}" Value="False">
				<Setter Property="IconTemplate">
					<Setter.Value>
						<DataTemplate>
							<mah:MultiFrameImage
								Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}"
								MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
								RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
								RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:MetroWindow}}}"
								Source="{TemplateBinding Content}" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource {x:Type Window}}" TargetType="{x:Type controls:ThemableWindow}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ThemableWindow}">
					<Grid x:Name="RootGrid" Focusable="False">
						<Grid.Background>
							<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
								<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
								<Binding ElementName="ThemeMouseOverBorder" Path="Background" />
								<Binding ElementName="DisabledControlClickablePartBorder" Path="Background" />
							</MultiBinding>
						</Grid.Background>
						<Grid
							Height="30"
							Margin="1"
							VerticalAlignment="Top">
							<Grid.Background>
								<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
									<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding ElementName="ThemeBorder" Path="Background" />
									<Binding ElementName="StatusTextLightBorder" Path="Background" />
								</MultiBinding>
							</Grid.Background>
						</Grid>
						<Grid
							x:Name="PART_ContentGrid"
							Margin="1,31,1,1"
							Background="{DynamicResource MainBackgroundBrush}"
							Focusable="False">
							<ContentPresenter x:Name="Content" />
						</Grid>
						<controls:ExtendedButton
							x:Name="PART_BlackoutGrid"
							Margin="0,31,0,0"
							Background="Black"
							BorderThickness="0"
							Focusable="False"
							IsHitTestVisible="False"
							MouseDownColour="Black"
							MouseOverColour="Black"
							Opacity="0" />
						<Grid
							x:Name="PART_SettingsGrid"
							Width="Auto"
							Height="Auto"
							Margin="1,31,1,1"
							ClipToBounds="False"
							Focusable="False"
							IsEnabled="False"
							IsHitTestVisible="False">
							<Border
								x:Name="PART_SettingsBorder"
								Width="Auto"
								Height="Auto"
								Margin="0,-170,6,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="{DynamicResource MenuBrush}"
								BorderBrush="{DynamicResource MenuBorderBrush}"
								BorderThickness="1"
								CornerRadius="5"
								Focusable="False">
								<Border.Effect>
									<DropShadowEffect
										x:Name="PART_SettingsDropShadow"
										BlurRadius="30"
										ShadowDepth="0"
										Color="Black" />
								</Border.Effect>
								<Grid>
									<controls:BlurHost
										x:Name="Blurrer"
										BlurBackground="{Binding ElementName=Content}"
										BlurOpacity="0.5"
										Focusable="False"
										PreventResample="{Binding ElementName=PART_SettingsGrid, Path=IsEnabled, Converter={StaticResource BoolInverter}}"
										RedrawTrigger="{Binding ElementName=PART_SettingsBorder, Path=Margin, UpdateSourceTrigger=PropertyChanged}">
										<controls:ThemingControl
											x:Name="PART_ThemingControl"
											Width="Auto"
											Height="Auto"
											Margin="0,0,40,0"
											HorizontalAlignment="Center"
											VerticalAlignment="Bottom" />
									</controls:BlurHost>
									<controls:ExtendedButton
										x:Name="PART_SettingsCloseButton"
										Width="40"
										Height="30"
										Margin="0"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										Background="Transparent"
										BorderThickness="0"
										CornerRadius="0,5,0,5"
										DisabledBackgroundColour="Transparent"
										MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
										MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
										<scalableicons:CloseIcon
											Width="10"
											Height="10"
											Foreground="{DynamicResource TextBrush}" />
									</controls:ExtendedButton>
								</Grid>
							</Border>
						</Grid>
						<Grid
							x:Name="HeaderGrid"
							Height="31"
							Margin="0"
							VerticalAlignment="Top">
							<DockPanel>
								<controls:ExtendedButton
									x:Name="PART_CloseButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White"
									MouseDownColour="DarkRed"
									MouseOverColour="#e81123">
									<scalableicons:CloseIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<controls:ExtendedButton
									x:Name="PART_ChangeStateButton"
									Width="40"
									Margin="1,1,1,0"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<Grid Width="10" Height="10">
										<scalableicons:MaximiseIcon Foreground="{DynamicResource ThemeTextBrush}" Tag="MaximiseBorder" />
										<scalableicons:RestoreIcon
											Foreground="{DynamicResource ThemeTextBrush}"
											Tag="RestoreDownGrid"
											Visibility="Collapsed" />
									</Grid>
								</controls:ExtendedButton>
								<controls:ExtendedButton
									x:Name="PART_MinimiseButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="False"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<scalableicons:MinimiseIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<Border
									x:Name="PART_Splitter"
									Width="1"
									Margin="1,4,1,4"
									HorizontalAlignment="Right"
									Background="{DynamicResource ThemeDisabledTextBrush}"
									DockPanel.Dock="Right" />
								<controls:ExtendedButton
									x:Name="PART_ThemeSetButton"
									Width="40"
									Margin="1,1,1,0"
									HorizontalAlignment="Right"
									Background="Transparent"
									BorderThickness="0"
									DockPanel.Dock="Right"
									Focusable="True"
									Foreground="White">
									<controls:ExtendedButton.MouseOverColour>
										<SolidColorBrush Opacity="0.3" Color="White" />
									</controls:ExtendedButton.MouseOverColour>
									<controls:ExtendedButton.MouseDownColour>
										<SolidColorBrush Opacity="0.3" Color="Black" />
									</controls:ExtendedButton.MouseDownColour>
									<scalableicons:ExpandIcon
										Width="10"
										Height="10"
										Foreground="{DynamicResource ThemeTextBrush}" />
								</controls:ExtendedButton>
								<Image
									Width="Auto"
									Margin="9,8,0,8"
									Source="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
								<Label
									Margin="2"
									VerticalAlignment="Center"
									VerticalContentAlignment="Center"
									Content="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
									FontSize="11.5">
									<Label.Foreground>
										<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
											<Binding Path="IsActive" RelativeSource="{RelativeSource TemplatedParent}" />
											<Binding ElementName="ThemeTextBorder" Path="Background" />
											<Binding ElementName="ThemeDisabledBorder" Path="Background" />
										</MultiBinding>
									</Label.Foreground>
								</Label>
							</DockPanel>
						</Grid>
						<Border
							x:Name="ThemeBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeMouseOverBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeMouseOverBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeTextBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeTextBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="ThemeDisabledBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource ThemeDisabledTextBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="StatusTextLightBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource StatusTextLightBrush}"
							Visibility="Collapsed" />
						<Border
							x:Name="DisabledControlClickablePartBorder"
							Width="0"
							Height="0"
							Background="{DynamicResource DisabledControlClickablePartBrush}"
							Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ThemableFocusStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<Border
							Margin="-3"
							Background="{DynamicResource StatusTextBrush}"
							CornerRadius="3"
							Opacity="0.2"
							SnapsToDevicePixels="true" />
						<Border
							Margin="-3"
							Background="Transparent"
							BorderBrush="{DynamicResource StatusTextBrush}"
							BorderThickness="1"
							CornerRadius="3"
							SnapsToDevicePixels="true" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type controls:BlurHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BlurHost}">
                    <Grid>
                        <!--  Blur layer beneath the hosted element (ContentPresenter)  -->
                        <Border
                            x:Name="PART_BlurDecorator"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ResourceKey={x:Type Button}}" TargetType="{x:Type controls:ExtendedButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MouseOverColour" Value="Transparent" />
        <Setter Property="MouseDownColour" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExtendedButton}">
                    <Border
                        x:Name="PART_border"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted" Value="true">
							<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseOverColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseDownColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
						</Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="border" Property="Background" Value="{Binding DisabledBackgroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding DisabledForegroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ResourceKey={x:Type ToggleButton}}" TargetType="{x:Type controls:ExtendedToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MouseOverColour" Value="Transparent" />
        <Setter Property="MouseDownColour" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ExtendedToggleButton}">
                    <Border
                        x:Name="PART_border"
                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseOverColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="border" Property="Background" Value="{Binding CheckedColour, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{Binding MouseDownColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
						</Trigger>-->
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter TargetName="border" Property="Background" Value="{Binding DisabledBackgroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />-->
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{Binding DisabledForegroundColour, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region Base range slider-->

    <Style x:Key="DefaultRangeStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle x:Name="MainBorder" Fill="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
        <Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
            <Track.Thumb>
                <Thumb
                    x:Name="thumb"
                    Background="{TemplateBinding Background}"
                    Focusable="True" />
            </Track.Thumb>
        </Track>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:RangeSlider}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:RangeSlider}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="TopRow" Height="0" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="BottomRow" Height="0" />
                            </Grid.RowDefinitions>

                            <RepeatButton
                                x:Name="PART_MidRange"
                                Grid.Row="1"
                                Width="{TemplateBinding RangeWidth}"
                                Height="5"
                                Margin="{TemplateBinding RangeMargin}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                Style="{StaticResource DefaultRangeStyle}" />

                            <Slider
                                x:Name="PART_LowerSlider"
                                Grid.Row="1"
                                AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                                AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                                Focusable="False"
                                Template="{StaticResource SliderTemplate}" />

                            <Slider
                                x:Name="PART_HigherSlider"
                                Grid.Row="1"
                                AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
                                AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
                                Focusable="False"
                                Template="{StaticResource SliderTemplate}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Base DateTimeTextbox-->

    <Style TargetType="{x:Type controls:DatetimeTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DatetimeTextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TextBox
                                x:Name="PART_textbox"
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0"
                                Foreground="{TemplateBinding Foreground}"
                                SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Base DateTimeTextbox-->

    <Style TargetType="{x:Type controls:SearchBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:SearchBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TextBox
                                x:Name="PART_textBox"
                                Width="Auto"
                                Height="Auto"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                Text="{Binding SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Toggle Checkbox-->

    <Style x:Key="ToggleCheckbox" TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Width="30"
                            Height="15"
                            Background="{DynamicResource ControlNonClickablePartBrush}"
                            BorderThickness="0"
                            CornerRadius="{Binding Path=Height, ElementName=Border, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
                        <Border
                            x:Name="highlightCircle"
                            Width="13"
                            Height="13"
                            Margin="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="{DynamicResource ControlClickablePartBrush}"
                            BorderThickness="0"
                            CornerRadius="6.5" />
                        <Border
                            x:Name="ThemeBorder"
                            Background="Transparent"
                            BorderBrush="{DynamicResource ThemeNearBackgroundBrush}"
                            BorderThickness="1"
                            CornerRadius="{Binding ElementName=Border, Path=CornerRadius}"
                            Opacity="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            AutoReverse="False"
                                            Storyboard.TargetName="highlightCircle"
                                            Storyboard.TargetProperty="Margin"
                                            To="16,1,1,1"
                                            Duration="0:0:0.12">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation
                                            AutoReverse="False"
                                            Storyboard.TargetName="highlightCircle"
                                            Storyboard.TargetProperty="Margin"
                                            To="1"
                                            Duration="0:0:0.12">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBrush}" />
                            <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource StatusTextBrush}" />
                            <Setter TargetName="highlightCircle" Property="Grid.Column" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ThemeBorder" Property="BorderBrush" Value="{DynamicResource ControlNonClickablePartBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
                            <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
                            <Setter TargetName="ThemeBorder" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
                                <Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion End Custom Checkbox-->

    <!--#endregion-->

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Height="4"
                        Margin="-10,0,7,0"
                        Background="{DynamicResource ControlNonClickablePartBrush}"
                        BorderBrush="{DynamicResource ControlNonClickablePartBrush}"
                        BorderThickness="1"
                        CornerRadius="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Height="6"
                        Margin="7,-1,-10,0"
                        Background="{DynamicResource ThemeBackgroundBrush}"
                        BorderBrush="{DynamicResource ThemeBackgroundNearBackgroundBrush}"
                        BorderThickness="1"
                        CornerRadius="1"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton2" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Height="4"
                        Margin="7,-1,-10,0"
                        Background="{DynamicResource ControlNonClickablePartBrush}"
                        BorderBrush="{DynamicResource ControlNonClickablePartBrush}"
                        BorderThickness="1"
                        CornerRadius="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SliderRound" TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButton1}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButton}" />
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Template="{StaticResource SliderThumbHorizontalDefault}" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="RoundedSlider" TargetType="Slider">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource SliderRound}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region Slider thumb-->

    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid Width="20" Height="20">
            <Ellipse
                x:Name="grip"
                Width="14"
                Height="14"
                VerticalAlignment="Center"
                Fill="{DynamicResource ControlClickablePartBrush}"
                Stroke="{DynamicResource MenuBrush}" />
            <Border
                x:Name="gripBorder"
                Width="12"
                Height="12"
                VerticalAlignment="Center"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1"
                CornerRadius="6.5" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{DynamicResource ThemeMouseOverBrush}" />
                <Setter TargetName="gripBorder" Property="BorderBrush" Value="{DynamicResource ThemeMouseOverNearBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter TargetName="grip" Property="Fill" Value="{DynamicResource ThemeMouseDownBrush}" />
                <Setter TargetName="gripBorder" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownNearBackgroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="grip" Property="Fill" Value="{DynamicResource DisabledControlClickablePartBrush}" />
                <Setter TargetName="gripBorder" Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle
                        Width="1"
                        Cursor="SizeWE"
                        Stroke="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Themable Info Tooltip Style-->

    <Style x:Key="InfoTooltip" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Placement" Value="Bottom" />
        <Setter Property="VerticalOffset" Value="3" />
        <Setter Property="HorizontalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CentreToolTipConverter}">
                    <Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Border
                            Margin="10,10,10,10"
                            Background="{DynamicResource MenuBrush}"
                            BorderBrush="{DynamicResource MenuBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10">
                            <ContentPresenter Margin="6" />
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.6"
                                    ShadowDepth="0"
                                    Color="{DynamicResource InvertedTextColour}" />
                            </Border.Effect>
                        </Border>
                        <Grid
                            Height="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top">
                            <Polygon
                                Fill="{DynamicResource MenuBrush}"
                                Points="10,0,20,10,0,10"
                                Stroke="{DynamicResource MenuBorderBrush}"
                                StrokeThickness="1">
                                <Polygon.Effect>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.6"
                                        ShadowDepth="0"
                                        Color="{DynamicResource InvertedTextColour}" />
                                </Polygon.Effect>
                                <Polygon.Clip>
                                    <RectangleGeometry Rect="-10,-20,50,30" />
                                </Polygon.Clip>
                            </Polygon>
                            <Border
                                Width="7"
                                Height="3"
                                Margin="0,0,0,-2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Background="{DynamicResource MenuBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InfoTooltipHorizontal" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Placement" Value="Right" />
        <Setter Property="HorizontalOffset" Value="3" />
        <Setter Property="VerticalOffset">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CentreToolTipConverter}">
                    <Binding Path="PlacementTarget.ActualHeight" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="HasDropShadow" Value="False" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Border
                            Margin="5,10,10,10"
                            Background="{DynamicResource MenuBrush}"
                            BorderBrush="{DynamicResource MenuBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="10">
                            <ContentPresenter Margin="6" />
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    Opacity="0.6"
                                    ShadowDepth="0"
                                    Color="{DynamicResource InvertedTextColour}" />
                            </Border.Effect>
                        </Border>
                        <Grid
                            Width="5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <Polygon
                                Fill="{DynamicResource MenuBrush}"
                                Points="0,5,5,0,5,10"
                                Stroke="{DynamicResource MenuBorderBrush}"
                                StrokeThickness="1">
                                <Polygon.Effect>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.6"
                                        ShadowDepth="0"
                                        Color="{DynamicResource InvertedTextColour}" />
                                </Polygon.Effect>
                            </Polygon>
                            <Border
                                Width="3"
                                Height="7"
                                Margin="0,0,-2,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Background="{DynamicResource MenuBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
</ResourceDictionary>
