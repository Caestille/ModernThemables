<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:converters="clr-namespace:ModernThemables.Converters"
	xmlns:helperclasses="clr-namespace:CoreUtilities.HelperClasses;assembly=CoreUtilities"
	xmlns:scalableicons="clr-namespace:ModernThemables.ScalableIcons">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Generic.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!--#region Controls-->

	<!--#region Themable Tooltip Style-->

	<Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="HasDropShadow" Value="False" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Grid>
						<Border
							Margin="10,10,10,10"
							Background="{DynamicResource MenuBrush}"
							BorderBrush="{DynamicResource MenuBorderBrush}"
							BorderThickness="1"
							CornerRadius="5">
							<ContentPresenter Margin="6" />
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="10"
									Opacity="0.6"
									ShadowDepth="0"
									Color="{DynamicResource InvertedTextColour}" />
							</Border.Effect>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region Themable Info Tooltip Style-->

	<Style x:Key="InfoTooltip" TargetType="ToolTip">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Placement" Value="Bottom" />
		<Setter Property="VerticalOffset" Value="3" />
		<Setter Property="HorizontalOffset">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource CentreToolTipConverter}">
					<Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}" />
					<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
				</MultiBinding>
			</Setter.Value>
		</Setter>
		<Setter Property="HasDropShadow" Value="False" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Grid>
						<Border
							Margin="10,10,10,10"
							Background="{DynamicResource MenuBrush}"
							BorderBrush="{DynamicResource MenuBorderBrush}"
							BorderThickness="1"
							CornerRadius="10">
							<ContentPresenter Margin="6" />
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="10"
									Opacity="0.6"
									ShadowDepth="0"
									Color="{DynamicResource InvertedTextColour}" />
							</Border.Effect>
						</Border>
						<Grid
							Height="10"
							HorizontalAlignment="Center"
							VerticalAlignment="Top">
							<Polygon
								Fill="{DynamicResource MenuBrush}"
								Points="10,0,20,10,0,10"
								Stroke="{DynamicResource MenuBorderBrush}"
								StrokeThickness="1">
								<Polygon.Effect>
									<DropShadowEffect
										BlurRadius="10"
										Opacity="0.6"
										ShadowDepth="0"
										Color="{DynamicResource InvertedTextColour}" />
								</Polygon.Effect>
								<Polygon.Clip>
									<RectangleGeometry Rect="-10,-20,50,30" />
								</Polygon.Clip>
							</Polygon>
							<Border
								Width="7"
								Height="3"
								Margin="0,0,0,-2"
								HorizontalAlignment="Center"
								VerticalAlignment="Bottom"
								Background="{DynamicResource MenuBrush}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="InfoTooltipHorizontal" TargetType="ToolTip">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Placement" Value="Right" />
		<Setter Property="HorizontalOffset" Value="3" />
		<Setter Property="VerticalOffset">
			<Setter.Value>
				<MultiBinding Converter="{StaticResource CentreToolTipConverter}">
					<Binding Path="PlacementTarget.ActualHeight" RelativeSource="{RelativeSource Self}" />
					<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
				</MultiBinding>
			</Setter.Value>
		</Setter>
		<Setter Property="HasDropShadow" Value="False" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Grid>
						<Border
							Margin="5,10,10,10"
							Background="{DynamicResource MenuBrush}"
							BorderBrush="{DynamicResource MenuBorderBrush}"
							BorderThickness="1"
							CornerRadius="10">
							<ContentPresenter Margin="6" />
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="10"
									Opacity="0.6"
									ShadowDepth="0"
									Color="{DynamicResource InvertedTextColour}" />
							</Border.Effect>
						</Border>
						<Grid
							Width="5"
							HorizontalAlignment="Left"
							VerticalAlignment="Center">
							<Polygon
								Fill="{DynamicResource MenuBrush}"
								Points="0,5,5,0,5,10"
								Stroke="{DynamicResource MenuBorderBrush}"
								StrokeThickness="1">
								<Polygon.Effect>
									<DropShadowEffect
										BlurRadius="10"
										Opacity="0.6"
										ShadowDepth="0"
										Color="{DynamicResource InvertedTextColour}" />
								</Polygon.Effect>
							</Polygon>
							<Border
								Width="3"
								Height="7"
								Margin="0,0,-2,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Background="{DynamicResource MenuBrush}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region Slider-->

	<!--#region Slider thumb-->

	<ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
		<Grid Width="20" Height="20">
			<Ellipse
				x:Name="grip"
				Width="14"
				Height="14"
				VerticalAlignment="Center"
				Fill="{DynamicResource ControlClickablePartBrush}"
				Stroke="{DynamicResource MenuBrush}" />
			<Border
				x:Name="gripBorder"
				Width="12"
				Height="12"
				VerticalAlignment="Center"
				Background="Transparent"
				BorderBrush="Transparent"
				BorderThickness="1"
				CornerRadius="6.5" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{DynamicResource ThemeMouseOverBrush}" />
				<Setter TargetName="gripBorder" Property="BorderBrush" Value="{DynamicResource ThemeMouseOverNearBackgroundBrush}" />
			</Trigger>
			<Trigger Property="IsDragging" Value="true">
				<Setter TargetName="grip" Property="Fill" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="gripBorder" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownNearBackgroundBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter TargetName="grip" Property="Fill" Value="{DynamicResource DisabledControlClickablePartBrush}" />
				<Setter TargetName="gripBorder" Property="BorderBrush" Value="Transparent" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle
						Width="1"
						Cursor="SizeWE"
						Stroke="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Border
						Height="4"
						Margin="-10,0,7,0"
						Background="{DynamicResource ControlNonClickablePartBrush}"
						BorderBrush="{DynamicResource ControlNonClickablePartBrush}"
						BorderThickness="1"
						CornerRadius="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Border
						Height="6"
						Margin="7,-1,-10,0"
						Background="{DynamicResource ThemeBackgroundBrush}"
						BorderBrush="{DynamicResource ThemeBackgroundNearBackgroundBrush}"
						BorderThickness="1"
						CornerRadius="1"
						SnapsToDevicePixels="True" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderRepeatButton2" TargetType="RepeatButton">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Border
						Height="4"
						Margin="7,-1,-10,0"
						Background="{DynamicResource ControlNonClickablePartBrush}"
						BorderBrush="{DynamicResource ControlNonClickablePartBrush}"
						BorderThickness="1"
						CornerRadius="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="SliderRound" TargetType="Slider">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Track x:Name="PART_Track" Grid.Row="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButton1}" />
				</Track.DecreaseRepeatButton>
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButton}" />
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb Template="{StaticResource SliderThumbHorizontalDefault}" />
				</Track.Thumb>
			</Track>
		</Grid>
	</ControlTemplate>

	<Style x:Key="RoundedSlider" TargetType="Slider">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="MinHeight" Value="21" />
				<Setter Property="MinWidth" Value="104" />
				<Setter Property="Template" Value="{StaticResource SliderRound}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--#endregion-->

	<!--#region Combobox-->
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Border
				x:Name="Border3"
				Grid.ColumnSpan="1"
				Margin="0,0,5,0"
				Background="Transparent"
				BorderBrush="{DynamicResource StatusTextBrush}"
				BorderThickness="0"
				CornerRadius="0"
				SnapsToDevicePixels="True" />
			<Border
				Grid.ColumnSpan="2"
				Background="{DynamicResource ControlNonClickablePartBrush}"
				BorderThickness="0"
				CornerRadius="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
				SnapsToDevicePixels="True" />
			<Border
				x:Name="Border2"
				Grid.ColumnSpan="2"
				Margin="0,0,1,0"
				Background="Transparent"
				BorderBrush="Red"
				BorderThickness="{TemplateBinding BorderThickness}"
				CornerRadius="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
				SnapsToDevicePixels="True" />
			<Border
				x:Name="Border"
				Grid.Column="1"
				Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
				Background="{DynamicResource ControlClickablePartBrush}"
				BorderThickness="0"
				CornerRadius="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
				SnapsToDevicePixels="True" />
			<Path
				x:Name="Arrow"
				Grid.Column="1"
				Margin="1,1,0,0"
				HorizontalAlignment="Center"
				VerticalAlignment="Center"
				Data="M 0 0 L 4.5 4.5 L 9 0"
				Stroke="{DynamicResource TextBrush}"
				StrokeThickness="2" />
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Pressed" />
					<VisualState x:Name="Disabled" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="ToggleButton.IsMouseOver" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ThemeMouseOverBrush}" />
				<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource ThemeMouseOverBrush}" />
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource TextBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource StatusTextLightBrush}" />
				<Setter Property="Foreground" Value="Gray" />
				<Setter TargetName="Border2" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
				<Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
			</Trigger>
			<DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Border2" Property="BorderBrush" Value="{DynamicResource ThemeMouseDownBrush}" />
				<Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource TextBrush}" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
		<Border
			x:Name="PART_ContentHost"
			Background="Transparent"
			Focusable="False" />
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="IsEditable" Value="True" />
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="Margin" Value="2" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid Width="Auto">
						<ToggleButton
							x:Name="ToggleButton"
							Grid.Column="2"
							BorderThickness="{TemplateBinding BorderThickness}"
							ClickMode="Press"
							Focusable="false"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
							Template="{StaticResource ComboBoxToggleButton}" />

						<ContentPresenter
							x:Name="ContentSite"
							Width="Auto"
							Margin="8,3,35,3"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Content="{TemplateBinding SelectionBoxItem}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							IsHitTestVisible="False" />

						<TextBox
							x:Name="PART_EditableTextBox"
							Margin="3"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Background="Transparent"
							Focusable="True"
							Foreground="{DynamicResource TextBrush}"
							IsReadOnly="{TemplateBinding IsReadOnly}"
							Style="{x:Null}"
							Template="{StaticResource ComboBoxTextBox}"
							Visibility="Hidden" />

						<Popup
							x:Name="Popup"
							Margin="5"
							AllowsTransparency="True"
							Focusable="False"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							Placement="Bottom"
							PopupAnimation="Fade">
							<Grid
								x:Name="DropDown"
								MinWidth="{TemplateBinding ActualWidth}"
								MaxHeight="{TemplateBinding MaxDropDownHeight}"
								SnapsToDevicePixels="True">
								<Border
									x:Name="DropDownBorder"
									Margin="0,5,0,0"
									Background="{DynamicResource MenuBrush}"
									BorderBrush="{DynamicResource StatusTextLightBrush}"
									BorderThickness="1"
									CornerRadius="5" />
								<ScrollViewer
									Margin="5,7,5,5"
									Foreground="{DynamicResource TextBrush}"
									SnapsToDevicePixels="True">
									<StackPanel
										x:Name="StackPanel"
										IsItemsHost="True"
										KeyboardNavigation.DirectionalNavigation="Contained"
										TextBlock.Foreground="{DynamicResource TextBrush}" />
								</ScrollViewer>
							</Grid>
						</Popup>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false" />
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="StackPanel" Property="TextBlock.Foreground" Value="Gray" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#region Custom Combobox Item-->

	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Border
						x:Name="Bd"
						Padding="1"
						Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="0"
						CornerRadius="5"
						SnapsToDevicePixels="true">
						<ContentPresenter />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion Custom Combobox Item-->

	<!--#endregion End Combobox-->

	<!--#region RangeSlider-->

	<ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Track x:Name="PART_Track" Grid.Row="1">
				<Track.DecreaseRepeatButton>
					<RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderRepeatButton2}" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Template="{StaticResource SliderThumbHorizontalDefault}" />
				</Track.Thumb>
			</Track>
		</Grid>
	</ControlTemplate>

	<ControlTemplate x:Key="SliderTemplate2" TargetType="{x:Type Slider}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Track x:Name="PART_Track" Grid.Row="1">
				<Track.IncreaseRepeatButton>
					<RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderRepeatButton}" />
				</Track.IncreaseRepeatButton>
				<Track.Thumb>
					<Thumb
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Template="{StaticResource SliderThumbHorizontalDefault}" />
				</Track.Thumb>
			</Track>
		</Grid>
	</ControlTemplate>

	<Style TargetType="{x:Type controls:RangeSlider}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RangeSlider}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<RepeatButton
								x:Name="PART_MidRange"
								Grid.Row="1"
								Width="{TemplateBinding RangeWidth}"
								Height="5"
								Margin="{TemplateBinding RangeMargin}"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								SnapsToDevicePixels="True"
								Style="{StaticResource SliderRepeatButton1}" />

							<Slider
								x:Name="PART_LowerSlider"
								Grid.Row="1"
								Margin="0,0,0,1"
								VerticalAlignment="Center"
								AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
								AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
								Focusable="False"
								Template="{StaticResource SliderTemplate}" />

							<Slider
								x:Name="PART_HigherSlider"
								Grid.Row="1"
								Margin="0,0,0,1"
								VerticalAlignment="Center"
								AutoToolTipPlacement="{TemplateBinding AutoToolTipPlacement}"
								AutoToolTipPrecision="{TemplateBinding AutoToolTipPrecision}"
								Focusable="False"
								Template="{StaticResource SliderTemplate2}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region Base SearchBox-->

	<Style TargetType="{x:Type controls:SearchBox}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SearchBox}">
					<Grid>
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="5"
							Opacity="{TemplateBinding BackgroundOpacity}" />
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<scalableicons:MagnifyingGlassIcon
								Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
								Margin="2"
								HorizontalAlignment="Left"
								Foreground="{DynamicResource StatusTextBrush}"
								StrokeStyle="Round"
								StrokeThickness="1.5" />
							<TextBox
								x:Name="PART_textBox"
								Grid.Column="1"
								Width="Auto"
								Height="Auto"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								BorderThickness="0"
								Cursor="IBeam"
								Foreground="White"
								SnapsToDevicePixels="True"
								Text="{Binding SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
								<TextBox.Background>
									<SolidColorBrush Opacity="0.01" Color="{DynamicResource InvertedTextColour}" />
								</TextBox.Background>
							</TextBox>
							<TextBlock
								x:Name="PART_textBlock"
								Grid.Column="1"
								Width="Auto"
								Height="Auto"
								Margin="3,0,0,0"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Center"
								Foreground="{DynamicResource StatusTextBrush}"
								IsHitTestVisible="False"
								SnapsToDevicePixels="True"
								Text="Search"
								Visibility="{Binding ElementName=PART_textBox, Path=Text, Converter={StaticResource StringNotEmptyVisibilityConverter}, ConverterParameter=true}">
								<TextBlock.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsKeyboardFocused, ElementName=PART_textBox}" Value="True">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation
																Storyboard.TargetProperty="Opacity"
																To="0"
																Duration="0:0:0.1" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
												<DataTrigger.ExitActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation
																Storyboard.TargetProperty="Opacity"
																To="1"
																Duration="0:0:0.1" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.ExitActions>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<controls:ExtendedButton
								x:Name="PART_button"
								Grid.Column="2"
								Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
								Margin="3,2"
								HorizontalAlignment="Right"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Background="Transparent"
								BorderThickness="0"
								CornerRadius="3"
								MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
								<scalableicons:CloseIcon
									Margin="2"
									HorizontalAlignment="Stretch"
									VerticalAlignment="Stretch"
									Background="Transparent"
									Foreground="{DynamicResource StatusTextBrush}" />
							</controls:ExtendedButton>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region TextBox-->

	<Style TargetType="{x:Type TextBox}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border
						x:Name="Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="5"
						SnapsToDevicePixels="True">
						<ScrollViewer
							x:Name="PART_ContentHost"
							Background="Transparent"
							Focusable="false"
							HorizontalScrollBarVisibility="Hidden"
							TextElement.Foreground="{TemplateBinding Foreground}"
							VerticalScrollBarVisibility="Hidden" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region Base DateTimeTextbox-->

	<Style TargetType="{x:Type controls:DatetimeTextBox}">
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DatetimeTextBox}">
					<Border
						Background="{TemplateBinding Background}"
						CornerRadius="5"
						Focusable="False">
						<TextBox
							x:Name="PART_textbox"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Foreground="{TemplateBinding Foreground}">
							<TextBox.Background>
								<SolidColorBrush Opacity="0.01" Color="{DynamicResource InvertedTextColour}" />
							</TextBox.Background>
							<TextBox.Width>
								<MultiBinding Converter="{StaticResource StringWidthGetterConverter}" ConverterParameter="00/00/0000 00:00:00|7">
									<Binding Path="Format" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="Text" RelativeSource="{RelativeSource Self}" />
									<Binding Path="FontSize" RelativeSource="{RelativeSource Self}" />
									<Binding Path="FontFamily" RelativeSource="{RelativeSource Self}" />
									<Binding Path="FontStyle" RelativeSource="{RelativeSource Self}" />
									<Binding Path="FontWeight" RelativeSource="{RelativeSource Self}" />
									<Binding Path="FontStretch" RelativeSource="{RelativeSource Self}" />
								</MultiBinding>
							</TextBox.Width>
						</TextBox>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion-->

	<!--#region ScrollBar-->

	<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid x:Name="Grid">
						<Rectangle
							Width="Auto"
							Height="Auto"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Fill="Transparent" />
						<Border
							x:Name="Rectangle1"
							Width="Auto"
							Height="Auto"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Background="{TemplateBinding Background}"
							CornerRadius="3" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Tag" Value="Horizontal">
							<Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
							<Setter TargetName="Rectangle1" Property="Height" Value="7" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="false" />
		<Setter Property="Foreground" Value="#8C8C8C" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="7" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid
						x:Name="GridRoot"
						Width="7"
						Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="0.00001*" />
						</Grid.RowDefinitions>

						<Track
							x:Name="PART_Track"
							Grid.Row="0"
							Focusable="false"
							IsDirectionReversed="true">
							<Track.Thumb>
								<Thumb
									x:Name="Thumb"
									Background="{TemplateBinding Foreground}"
									Style="{DynamicResource ScrollThumbs}" />
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton
									x:Name="PageUp"
									Command="ScrollBar.PageDownCommand"
									Focusable="false"
									Opacity="0" />
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton
									x:Name="PageDown"
									Command="ScrollBar.PageUpCommand"
									Focusable="false"
									Opacity="0" />
							</Track.DecreaseRepeatButton>
						</Track>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
							<Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
							<Setter TargetName="GridRoot" Property="Width" Value="9" />
						</Trigger>
						<Trigger SourceName="Thumb" Property="IsDragging" Value="true">
							<Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ThemeMouseDownBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="Orientation" Value="Horizontal">
							<Setter TargetName="GridRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Track" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
							<Setter Property="Width" Value="Auto" />
							<Setter Property="Height" Value="7" />
							<Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
							<Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
							<Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid x:Name="Grid" HorizontalAlignment="Stretch">
						<ScrollContentPresenter
							x:Name="PART_ScrollContentPresenter"
							Margin="{TemplateBinding Padding}"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							CanHorizontallyScroll="False"
							CanVerticallyScroll="False"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
						<ScrollBar
							x:Name="PART_VerticalScrollBar"
							HorizontalAlignment="Right"
							AutomationProperties.AutomationId="VerticalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0"
							Opacity="0.55"
							ViewportSize="{TemplateBinding ViewportHeight}"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar
							x:Name="PART_HorizontalScrollBar"
							VerticalAlignment="Bottom"
							AutomationProperties.AutomationId="HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0"
							Opacity="0.55"
							Orientation="Horizontal"
							ViewportSize="{TemplateBinding ViewportWidth}"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion End ScrollBar-->

	<!--#region Custom Datagrid-->

	<Style x:Key="ThemableDatagridCell" TargetType="{x:Type DataGridCell}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0,5" />
		<Setter Property="Margin" Value="-1,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border x:Name="Border" Background="Transparent">
						<ContentPresenter Margin="5,10" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="DataGridCell.IsSelected" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ThemableDatagridRowHeader" TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Control.Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
		<Setter Property="Control.HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}" CornerRadius="5">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ThemableDatagridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource StatusTextBrush}" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="BorderThickness" Value="0,0,1,0" />
		<Setter Property="BorderBrush" Value="DarkGray" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="TextBlock.TextAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="Light" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DataGridColumnHeader">
					<Grid Margin="0,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Border
							x:Name="BackgroundBorder"
							Grid.ColumnSpan="2"
							Background="Transparent"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0"
							CornerRadius="5" />
						<Border
							Grid.ColumnSpan="2"
							Margin="0,3,0,3"
							Background="Transparent"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0,0,1,0"
							Visibility="{TemplateBinding Content,
							                             Converter={StaticResource VisibleIfNotNullConverter}}" />
						<ContentPresenter
							Margin="5"
							HorizontalAlignment="Left"
							VerticalAlignment="Center" />
						<Path
							x:Name="SortArrow"
							Grid.Column="1"
							Width="8"
							Height="6"
							Margin="0,0,8,0"
							VerticalAlignment="Center"
							Data="M 0,0 L 1,0 0.5,1 z"
							Fill="{DynamicResource TextBrush}"
							RenderTransformOrigin="0.5, 0.4"
							Stretch="Fill"
							Visibility="Collapsed" />
						<Thumb
							x:Name="PART_LeftHeaderGripper"
							HorizontalAlignment="Left"
							Style="{StaticResource ThumbStyle}" />
						<Thumb
							x:Name="PART_RightHeaderGripper"
							Grid.Column="1"
							HorizontalAlignment="Right"
							Style="{StaticResource ThumbStyle}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
							<Setter TargetName="SortArrow" Property="Fill" Value="{DynamicResource ThemeTextBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource ThemeTextBrush}" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Setter TargetName="SortArrow" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="DisplayIndex" Value="0">
							<Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ThemableDataGrid" TargetType="{x:Type DataGrid}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="IsReadOnly" Value="True" />
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource StatusTextBrush}" />
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource StatusTextBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="VerticalScrollBarVisibility" Value="Visible" />
		<Setter Property="EnableRowVirtualization" Value="True" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="RowBackground" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
		<Setter Property="ItemsSource" Value="{Binding VirtualisedLogRows}" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="CellStyle" Value="{StaticResource ThemableDatagridCell}" />
		<Setter Property="RowHeaderStyle" Value="{StaticResource ThemableDatagridRowHeader}" />
		<Setter Property="ColumnHeaderStyle" Value="{StaticResource ThemableDatagridColumnHeader}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border
						x:Name="Border"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="5"
						SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto" />
												<RowDefinition Height="*" />
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<Grid.Clip>
												<GeometryGroup FillRule="Nonzero">
													<GeometryGroup.Children>
														<MultiBinding Converter="{StaticResource RoundedGeometryGroupConverter}" ConverterParameter="5">
															<Binding
																ElementName="Border"
																Path="ActualWidth"
																UpdateSourceTrigger="PropertyChanged" />
															<Binding
																ElementName="Border"
																Path="ActualHeight"
																UpdateSourceTrigger="PropertyChanged" />
														</MultiBinding>
													</GeometryGroup.Children>
												</GeometryGroup>
											</Grid.Clip>
											<Button
												Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
												Command="{x:Static DataGrid.SelectAllCommand}"
												Focusable="false"
												Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
												                                              TypeInTargetAssembly={x:Type DataGrid}}}"
												Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
											<DataGridColumnHeadersPresenter
												x:Name="PART_ColumnHeadersPresenter"
												Grid.Column="1"
												Grid.ColumnSpan="2"
												Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
											<ScrollContentPresenter
												x:Name="PART_ScrollContentPresenter"
												Grid.Row="1"
												Grid.ColumnSpan="2"
												CanContentScroll="{TemplateBinding CanContentScroll}" />
											<ScrollBar
												x:Name="PART_VerticalScrollBar"
												Grid.Row="1"
												Grid.Column="2"
												Margin="0,5"
												Maximum="{TemplateBinding ScrollableHeight}"
												Orientation="Vertical"
												ViewportSize="{TemplateBinding ViewportHeight}"
												Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
												Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
											<Grid Grid.Row="2" Grid.Column="1">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<ScrollBar
													x:Name="PART_HorizontalScrollBar"
													Grid.Column="1"
													Maximum="{TemplateBinding ScrollableWidth}"
													Orientation="Horizontal"
													ViewportSize="{TemplateBinding ViewportWidth}"
													Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
													Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
											</Grid>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion Custom datagrid-->

	<!--#region Custom ListBox-->

	<Style TargetType="{x:Type ListBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Background" Value="Black" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ListBoxItem">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ListBoxItem">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border
						x:Name="Bd"
						Padding="1"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="5"
						SnapsToDevicePixels="true">
						<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource DisabledControlClickablePartBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion End Custom ListBox-->

	<!--#region Custom Checkbox-->

	<Style x:Key="ThemableCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Border
						x:Name="Border"
						Background="Transparent"
						BorderBrush="Gray"
						BorderThickness="0"
						CornerRadius="4">
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="16" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Border
								x:Name="highlightCircle"
								Height="14"
								Margin="1"
								VerticalAlignment="Top"
								Background="Transparent"
								BorderBrush="{DynamicResource StatusTextBrush}"
								BorderThickness="1"
								CornerRadius="3">
								<Grid
									x:Name="GlyphPanel"
									Height="16"
									Margin="2,2,2,0"
									VerticalAlignment="Top"
									Visibility="Hidden">
									<Path
										x:Name="GlyphPanelPath"
										VerticalAlignment="Top"
										Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
										Fill="{DynamicResource ThemeTextBrush}"
										FlowDirection="LeftToRight" />
								</Grid>
							</Border>
							<ContentPresenter
								x:Name="content"
								Grid.Column="1"
								Margin="5,0,5,0"
								HorizontalAlignment="Left"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								TextBlock.FontSize="{TemplateBinding FontSize}" />

						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!--  The GlyphPanel contains the CheckMark  -->
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="Gray" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							<Setter TargetName="highlightCircle" Property="BorderBrush" Value="Gray" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeMouseDownBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion End Custom Checkbox-->

	<!--#region Custom Radio Button-->

	<Style x:Key="ThemableRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border
						x:Name="Border"
						Padding="0,0,5,0"
						Background="Transparent"
						BorderBrush="Gray"
						BorderThickness="0"
						CornerRadius="4">
						<Grid x:Name="grid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="16" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Border
								x:Name="highlightCircle"
								Height="14"
								Margin="1"
								VerticalAlignment="Center"
								Background="Transparent"
								BorderBrush="{DynamicResource StatusTextBrush}"
								BorderThickness="1"
								CornerRadius="7">
								<Grid
									x:Name="GlyphPanel"
									Margin="0"
									Visibility="Hidden">
									<Ellipse
										x:Name="GlyphPanelPath"
										Width="6.5"
										Height="6.5"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Fill="{DynamicResource ThemeTextBrush}" />
								</Grid>
							</Border>
							<ContentPresenter
								x:Name="content"
								Grid.Column="1"
								Margin="5,0,0,0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top" />

						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!--  The GlyphPanel contains the CheckMark  -->
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="Gray" />
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							<Setter TargetName="highlightCircle" Property="BorderBrush" Value="Gray" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeMouseDownBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion End Custom Checkbox-->

	<!--#region Toggle Checkbox-->

	<Style x:Key="ToggleCheckbox" TargetType="CheckBox">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid>
						<Border
							x:Name="Border"
							Width="30"
							Height="15"
							Background="{DynamicResource ControlNonClickablePartBrush}"
							BorderThickness="0"
							CornerRadius="{Binding Path=Height, ElementName=Border, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
						<Border
							x:Name="highlightCircle"
							Width="13"
							Height="13"
							Margin="1"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Background="{DynamicResource ControlClickablePartBrush}"
							BorderThickness="0"
							CornerRadius="6.5" />
						<Border
							x:Name="ThemeBorder"
							Background="Transparent"
							BorderBrush="{DynamicResource ThemeNearBackgroundBrush}"
							BorderThickness="1"
							CornerRadius="{Binding ElementName=Border, Path=CornerRadius}"
							Opacity="0.5" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation
											AutoReverse="False"
											Storyboard.TargetName="highlightCircle"
											Storyboard.TargetProperty="Margin"
											To="16,1,1,1"
											Duration="0:0:0.12">
											<ThicknessAnimation.EasingFunction>
												<QuadraticEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation
											AutoReverse="False"
											Storyboard.TargetName="highlightCircle"
											Storyboard.TargetProperty="Margin"
											To="1"
											Duration="0:0:0.12">
											<ThicknessAnimation.EasingFunction>
												<QuadraticEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBrush}" />
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource StatusTextBrush}" />
							<Setter TargetName="highlightCircle" Property="Grid.Column" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter TargetName="ThemeBorder" Property="BorderBrush" Value="{DynamicResource ControlNonClickablePartBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							<Setter TargetName="ThemeBorder" Property="BorderBrush" Value="Transparent" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#endregion End Custom Checkbox-->

	<!--#endregion End Controls-->

</ResourceDictionary>