<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:scalableicons="clr-namespace:ModernThemables.Icons;assembly=ModernThemables.Icons"
	d:DataContext="{d:DesignInstance MenuItem}"
	mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/ModernThemables;component/Themes/Rounded/FocusStyle.xaml" />
		<ResourceDictionary Source="pack://application:,,,/ModernThemables;component/Themes/Generic/Colours.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ThemableFocusStyle}" />
		<Setter Property="Template">
			<Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid
		Margin="0,3,0,0"
		Visibility="{TemplateBinding Title, Converter={StaticResource StringNotEmptyVisibilityConverter}}">
                        <Border
			Width="3"
			Margin="0,10"
			HorizontalAlignment="Left"
			Background="{DynamicResource ThemeMouseOverBrush}"
			CornerRadius="0,5,5,0"
			Visibility="{TemplateBinding IsOpen, Converter={StaticResource VisibleIfTrueConverter}}" />
                        <StackPanel>
                            <!--#region Single item grid-->
                            <Grid x:Name="SingleItemGrid">
                                <Border>
                                    <controls:ExtendedButton
						Width="Auto"
						Height="40"
						Margin="5,2"
						VerticalAlignment="Top"
						HorizontalContentAlignment="Left"
						Background="Transparent"
						BorderThickness="0"
						CornerRadius="5"
						Foreground="{DynamicResource TextBrush}"
						MouseDownColour="{DynamicResource MenuMouseDownBrush}"
						MouseOverColour="{DynamicResource MenuMouseOverBrush}" />
                                    <Border.Style>
                                        <Style>
                                            <Setter Property="ToolTipService.InitialShowDelay" Value="200" />
                                        </Style>
                                    </Border.Style>
                                    <Border.ToolTip>
                                        <ToolTip Style="{StaticResource InfoTooltipHorizontal}" Visibility="{TemplateBinding IsContainingMenuOpen, Converter={StaticResource VisibleIfFalseConverter}}">
                                            <TextBlock FontSize="17" Text="{TemplateBinding Title}" />
                                        </ToolTip>
                                    </Border.ToolTip>
                                </Border>
                                <Border
					Height="1"
					Margin="15,0"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Bottom"
					Background="{DynamicResource StatusTextLightBrush}"
					IsHitTestVisible="False"
					Opacity="0.3"
					Visibility="{TemplateBinding IsOpen, Converter={StaticResource VisibleIfTrueConverter}}" />
                                <!--#region Icon and label-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl
						Grid.Column="1"
						Width="25"
						Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
						Padding="4"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						HorizontalContentAlignment="Center"
						VerticalContentAlignment="Stretch"
                                        ContentTemplate="{TemplateBinding IconTemplate}"
						Content="{TemplateBinding Icon}"
						Focusable="False"
						IsHitTestVisible="False" />
                                    <ContentControl
						Grid.Column="2"
						Margin="10,0,0,0"
						Padding="0"
						VerticalAlignment="Center"
						Content="{TemplateBinding Title}"
                                        ContentTemplate="{TemplateBinding TitleTemplate}"
						IsHitTestVisible="False"
						Visibility="{Binding IsContainingMenuOpen, Converter={StaticResource VisibleIfTrueConverter}}">
                                    </ContentControl>
                                </Grid>
                                <!--#endregion-->
                                <!--#region Add child button-->
                                <controls:ExtendedButton
					Margin="0,0,32,0"
					HorizontalAlignment="Right"
					Background="Transparent"
					Command="{Binding AddChildCommand}"
					Foreground="{DynamicResource StatusTextBrush}"
					Style="{StaticResource RoundButtonStyle}"
					ToolTip="Add">
                                    <controls:ExtendedButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
                                            <Binding Path="SupportsAddingChildren" />
                                            <Binding Path="IsMenuItemExpanded" />
                                            <Binding ElementName="SingleItemGrid" Path="IsMouseOver" />
                                        </MultiBinding>
                                    </controls:ExtendedButton.Visibility>
                                    <scalableicons:Icon Margin="2" Kind="Plus" />
                                </controls:ExtendedButton>
                                <!--#endregion-->
                                <!--#region Drop down indicator-->
                                <Grid
					Width="10"
					Height="10"
					Margin="0,3,15,0"
					HorizontalAlignment="Right"
					IsHitTestVisible="False"
					RenderTransformOrigin="0.5,0.5">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
                                            <Binding Converter="{StaticResource SequenceHasElementsBooleanConverter}" Path="ChildViewModels" />
                                            <Binding Path="IsMenuItemExpanded" />
                                            <Binding Path="CanDropDown" />
                                        </MultiBinding>
                                    </Grid.Visibility>
                                    <Grid.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsShowingChildren}" Value="True">
                                                    <Setter Property="Grid.RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="180" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <scalableicons:Icon Foreground="{DynamicResource TextBrush}" Kind="Expand" />
                                </Grid>
                                <!--#endregion-->
                                <!--#region Delete button-->
                                <controls:ExtendedButton
					Margin="10,0"
					Padding="3"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					Background="Transparent"
					Command="{Binding RequestDeleteCommand}"
					Foreground="{DynamicResource StatusTextBrush}"
					Style="{StaticResource RoundButtonStyle}"
					ToolTip="Delete">
                                    <controls:ExtendedButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
                                            <Binding Path="SupportsDeleting" />
                                            <Binding Path="IsMenuItemExpanded" />
                                            <Binding ElementName="SingleItemGrid" Path="IsMouseOver" />
                                        </MultiBinding>
                                    </controls:ExtendedButton.Visibility>
                                    <scalableicons:Icon Margin="1,0,0,0" Kind="Bin" />
                                </controls:ExtendedButton>
                                <!--#endregion-->
                            </Grid>
                            <!--#endregion-->
                            <!--#region Child items-->
                            <Grid Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
                                <Grid.Resources>
                                    <DataTemplate DataType="{x:Type vms:AnalysisViewModel}">
                                        <Grid
							Width="0"
							Height="0"
							Focusable="False"
							IsHitTestVisible="False" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type bankVms:BanksViewModel}">
                                        <Grid
							Width="0"
							Height="0"
							Focusable="False"
							IsHitTestVisible="False" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type bankVms:BankViewModel}" />
                                    <DataTemplate DataType="{x:Type vms:BudgetingViewModel}">
                                        <Grid
							Width="0"
							Height="0"
							Focusable="False"
							IsHitTestVisible="False" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vms:DashboardViewModel}">
                                        <Grid
							Width="0"
							Height="0"
							Focusable="False"
							IsHitTestVisible="False" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vms:SettingsViewModel}">
                                        <controls1:SettingsControl />
                                    </DataTemplate>
                                </Grid.Resources>
                                <ItemsControl VerticalAlignment="Bottom" ItemsSource="{Binding ChildViewModels, UpdateSourceTrigger=PropertyChanged}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <controls1:MenuItemControl />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ContentControl
					HorizontalAlignment="Right"
					VerticalAlignment="Top"
					Content="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, UpdateSourceTrigger=PropertyChanged}"
					Focusable="False"
					Visibility="{Binding RelativeSource={RelativeSource Self}, Path=DataContext, Converter={StaticResource VisibleIfNotNullConverter}}" />
                            </Grid>
                            <!--#endregion-->
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>