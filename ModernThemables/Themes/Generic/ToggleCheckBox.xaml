<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="ToggleCheckbox" TargetType="CheckBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid>
						<Border
							x:Name="Border"
							Width="30"
							Height="15"
							Background="{DynamicResource ControlNonClickablePartBrush}"
							BorderThickness="0"
							CornerRadius="{Binding Path=Height, ElementName=Border, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
						<Border
							x:Name="highlightCircle"
							Width="13"
							Height="13"
							Margin="1"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Background="{DynamicResource ControlClickablePartBrush}"
							BorderThickness="0"
							CornerRadius="6.5" />
						<Border
							x:Name="ThemeBorder"
							Background="Transparent"
							BorderBrush="{DynamicResource ThemeNearBackgroundBrush}"
							BorderThickness="1"
							CornerRadius="{Binding ElementName=Border, Path=CornerRadius}"
							Opacity="0.5" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation
											AutoReverse="False"
											Storyboard.TargetName="highlightCircle"
											Storyboard.TargetProperty="Margin"
											To="16,1,1,1"
											Duration="0:0:0.12">
											<ThicknessAnimation.EasingFunction>
												<QuadraticEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation
											AutoReverse="False"
											Storyboard.TargetName="highlightCircle"
											Storyboard.TargetProperty="Margin"
											To="1"
											Duration="0:0:0.12">
											<ThicknessAnimation.EasingFunction>
												<QuadraticEase EasingMode="EaseOut" />
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBrush}" />
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource StatusTextBrush}" />
							<Setter TargetName="highlightCircle" Property="Grid.Column" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="False">
							<Setter TargetName="ThemeBorder" Property="BorderBrush" Value="{DynamicResource ControlNonClickablePartBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ThemeMouseOverBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
							<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							<Setter TargetName="ThemeBorder" Property="BorderBrush" Value="Transparent" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource ControlClickablePartMouseOverBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsEnabled" Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledControlNonClickablePartBrush}" />
								<Setter TargetName="highlightCircle" Property="Background" Value="{DynamicResource DisabledControlClickablePartBrush}" />
							</MultiTrigger.Setters>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
