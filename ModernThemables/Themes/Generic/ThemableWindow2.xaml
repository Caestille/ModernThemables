<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:ModernThemables.Controls"
	xmlns:controlzEx="urn:controlzex"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:scalableicons="clr-namespace:ModernThemables.Icons;assembly=ModernThemables.Icons">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Converters.xaml" />
		<ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="WindowTitle" TargetType="{x:Type Thumb}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ThemableWindow2" TargetType="{x:Type controls:ThemableWindow2}">
		<Border
			x:Name="PART_Border"
			Margin="{TemplateBinding Padding}"
			Background="{TemplateBinding Background}"
			BorderThickness="{TemplateBinding BorderThickness}"
			UseLayoutRounding="True">
			<AdornerDecorator UseLayoutRounding="False">
				<Grid
					Background="{x:Null}"
					LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
					RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
					UseLayoutRounding="False">
					<Grid>
						<Grid.ColumnDefinitions>
							<!--  icon  -->
							<ColumnDefinition Width="Auto" />
							<!--  left window commands, title, right window commands  -->
							<ColumnDefinition Width="*" />
							<!--  min,max,close buttons  -->
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="{Binding TitleBarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>

						<Rectangle
							x:Name="PART_WindowTitleBackground"
							Grid.ColumnSpan="3"
							Fill="{TemplateBinding WindowTitleBrush}"
							Focusable="False"
							StrokeThickness="0" />

						<!--  icon  -->
						<ContentControl
							x:Name="PART_Icon"
							Width="20"
							Height="20"
							Margin="8,0,0,0"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							Panel.ZIndex="1"
							controlzEx:WindowChrome.IsHitTestVisibleInChrome="True"
							Content="{TemplateBinding Icon}"
							ContentTemplate="{TemplateBinding IconTemplate}"
							Focusable="False"
							Visibility="{TemplateBinding ShowIcon,
							                             Converter={StaticResource VisibleIfTrueConverter}}" />

						<mah:MetroThumb
							x:Name="PART_WindowTitleThumb"
							Grid.ColumnSpan="3"
							Style="{StaticResource WindowTitle}"
							UseLayoutRounding="True" />

						<!--  the title bar  -->
						<DockPanel Grid.Column="1" Focusable="False">
							<!--  the left window commands  -->
							<mah:ContentPresenterEx
								x:Name="PART_LeftWindowCommands"
								Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Left"
								Focusable="False" />
							<!--  the right window commands  -->
							<mah:ContentPresenterEx
								x:Name="PART_RightWindowCommands"
								Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
								DockPanel.Dock="Right"
								Focusable="False" />
							<!--  the title bar  -->
							<mah:MetroThumbContentControl
								x:Name="PART_TitleBar"
								Margin="5,1,0,-1"
								HorizontalAlignment="{TemplateBinding TitleAlignment}"
								HorizontalContentAlignment="Stretch"
								VerticalContentAlignment="Stretch"
								Content="{TemplateBinding Title}"
								ContentTemplate="{TemplateBinding TitleTemplate}"
								Focusable="False"
								FontSize="12" />
						</DockPanel>

						<!--  the window button commands  -->
						<mah:ContentPresenterEx
							x:Name="PART_WindowButtonCommands"
							Grid.Column="2"
							Panel.ZIndex="1"
							Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
							Focusable="False" />

						<!--  the main window content  -->
						<ContentPresenter
							x:Name="PART_Content"
							Grid.Row="1"
							Grid.ColumnSpan="3"
							FocusVisualStyle="{x:Null}"
							UseLayoutRounding="False" />

						<controls:ExtendedButton
							x:Name="PART_SettingsCloseRegion"
							Grid.Row="1"
							Grid.ColumnSpan="3"
							Background="Black"
							BorderThickness="0"
							Focusable="False"
							IsHitTestVisible="False"
							MouseDownColour="Black"
							MouseOverColour="Black"
							Opacity="0" />

						<Grid
							Grid.Row="1"
							Grid.ColumnSpan="3"
							ClipToBounds="True">
							<Border
								x:Name="PART_SettingsBorder"
								Margin="5,-150,5,5"
								HorizontalAlignment="Right"
								VerticalAlignment="Top"
								Background="{DynamicResource MenuBrush}"
								BorderBrush="{DynamicResource MenuBorderBrush}"
								BorderThickness="1"
								CornerRadius="5"
								Focusable="False">
								<Border.Effect>
									<DropShadowEffect
										x:Name="SettingsDropShadow"
										BlurRadius="30"
										ShadowDepth="0"
										Color="Black" />
								</Border.Effect>
								<Grid>
									<controls:BlurHost
										BlurBackground="{Binding ElementName=PART_Content}"
										BlurOpacity="0.5"
										Focusable="False"
										RedrawTrigger="{Binding ElementName=PART_SettingsBorder, Path=Margin, IsAsync=True}">
										<controls:ThemingControl
											x:Name="PART_ThemingMenu"
											Width="Auto"
											Height="Auto"
											Margin="0,0,40,0"
											HorizontalAlignment="Center"
											VerticalAlignment="Bottom" />
									</controls:BlurHost>
									<controls:ExtendedButton
										x:Name="PART_SettingsCloseButton"
										Width="40"
										Height="30"
										HorizontalAlignment="Right"
										VerticalAlignment="Top"
										Background="Transparent"
										BorderThickness="0"
										CornerRadius="0,5,0,5"
										MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
										MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}">
										<scalableicons:Icon
											Width="10"
											Height="10"
											Foreground="{DynamicResource TextBrush}"
											Kind="Close" />
									</controls:ExtendedButton>
								</Grid>
							</Border>
						</Grid>
					</Grid>
				</Grid>
			</AdornerDecorator>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="ShowThemingMenu" Value="True">
				<Setter TargetName="PART_SettingsCloseRegion" Property="IsHitTestVisible" Value="True" />
				<Setter TargetName="PART_SettingsCloseRegion" Property="Opacity" Value="0.5" />
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation
								Storyboard.TargetName="PART_SettingsBorder"
								Storyboard.TargetProperty="Margin"
								To="5,4,5,5"
								Duration="0:0:0.1" />
							<ThicknessAnimation
								BeginTime="0:0:0.1"
								Storyboard.TargetName="PART_SettingsBorder"
								Storyboard.TargetProperty="Margin"
								To="5"
								Duration="0:0:0.01" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ThicknessAnimation
								Storyboard.TargetName="PART_SettingsBorder"
								Storyboard.TargetProperty="Margin"
								To="5,-150,5,5"
								Duration="0:0:0.1" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="ShowTitleBar" Value="False">
				<Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
			</Trigger>
			<!--  handle active/inactive state  -->
			<Trigger Property="IsActive" Value="False">
				<!--<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowColor, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static mahConverters:ColorToSolidColorBrushConverter.DefaultInstance}}" />-->
				<Setter TargetName="PART_WindowTitleBackground" Property="Fill" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="False" />
					<Condition Property="NonActiveGlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsActive" Value="True" />
					<Condition Property="GlowColor" Value="{x:Null}" />
				</MultiTrigger.Conditions>
				<Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>

	</ControlTemplate>

	<Style TargetType="{x:Type controls:ThemableWindow2}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="TitleBarHeight" Value="31" />
		<Setter Property="GlowDepth" Value="1" />
		<Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
		<Setter Property="GlowColor" Value="{DynamicResource ThemeMouseOverColour}" />
		<Setter Property="NonActiveGlowColor" Value="{DynamicResource DisabledControlClickablePartColour}" />
		<Setter Property="WindowTitleBrush" Value="{DynamicResource ThemeBrush}" />
		<Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource StatusTextLightBrush}" />
		<Setter Property="Template" Value="{StaticResource ThemableWindow2}" />
		<Setter Property="TitleTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock
						Margin="8,-1,1,0"
						VerticalAlignment="Center"
						Text="{TemplateBinding Content}"
						TextTrimming="CharacterEllipsis">
						<TextBlock.Style>
							<Style>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}" Value="False">
										<Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeDisabledTextBrush}" />
									</DataTrigger>
									<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}" Value="True">
										<Setter Property="TextBlock.Foreground" Value="{DynamicResource ThemeTextBrush}" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Icon, Mode=OneWay, Converter={StaticResource IsNullConverter}}" Value="False">
				<Setter Property="IconTemplate">
					<Setter.Value>
						<DataTemplate>
							<mah:MultiFrameImage
								Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}"
								MultiFrameImageMode="{Binding IconScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.BitmapScalingMode="{Binding IconBitmapScalingMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								RenderOptions.EdgeMode="{Binding IconEdgeMode, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ThemableWindow2}}}"
								Source="{TemplateBinding Content}" />
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
