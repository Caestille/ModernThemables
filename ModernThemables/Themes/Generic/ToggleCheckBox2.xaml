<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:ModernThemables.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CoreUtilities;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ModernThemables;component/Themes/Colours.xaml" />
        <ResourceDictionary Source="pack://application:,,,/ModernThemables;component/Themes/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="GenericToggleCheckboxTemplate" TargetType="{x:Type controls:CheckBox2}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Width="30"
                Height="15"
                Margin="1,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Background="{TemplateBinding UncheckedBackground}"
                BorderThickness="0"
                CornerRadius="8" />
            <Border
                x:Name="highlightCircle"
                Width="16"
                Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Background="{TemplateBinding Background}"
                BorderThickness="0"
                CornerRadius="8.5" />
            <ContentPresenter
                Grid.Column="1"
                Margin="5,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                AutoReverse="False"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Margin"
                                To="16,0,0,0"
                                Duration="0:0:0.12">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation
                                AutoReverse="True"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Height"
                                To="11"
                                Duration="0:0:0.06">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                AutoReverse="True"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Width"
                                To="19"
                                Duration="0:0:0.06">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation
                                AutoReverse="False"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Margin"
                                To="0"
                                Duration="0:0:0.12">
                                <ThicknessAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation
                                AutoReverse="True"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Height"
                                To="11"
                                Duration="0:0:0.08">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation
                                AutoReverse="True"
                                Storyboard.TargetName="highlightCircle"
                                Storyboard.TargetProperty="Width"
                                To="19"
                                Duration="0:0:0.08">
                                <DoubleAnimation.EasingFunction>
                                    <QuadraticEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="highlightCircle" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MouseOverConverter}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="highlightCircle" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DisabledConverter}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="highlightCircle" Property="Background" Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MouseDownConverter}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToggleCheckbox2" TargetType="{x:Type controls:CheckBox2}">
        <Setter Property="UncheckedBackground" Value="{DynamicResource SecondaryControlBrush}" />
        <Setter Property="CheckedBackground" Value="{DynamicResource ThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryControlBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template" Value="{StaticResource GenericToggleCheckboxTemplate}" />
    </Style>

</ResourceDictionary>
