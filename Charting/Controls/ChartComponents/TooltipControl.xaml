<UserControl
	x:Class="ModernThemables.Charting.Controls.ChartComponents.TooltipControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:chartcomponents="clr-namespace:ModernThemables.Charting.Controls.ChartComponents"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="root"
	HorizontalAlignment="Stretch"
	VerticalAlignment="Stretch"
	mc:Ignorable="d">
	<Grid x:Name="Grid" ContextMenuOpening="Grid_ContextMenuOpening">
		<Grid.ContextMenu>
			<ContextMenu x:Name="ContextMenu">
				<MenuItem
					Header="Crosshair"
					IsCheckable="True"
					IsChecked="{Binding Path=ShowCrosshairs, ElementName=root, Mode=TwoWay}"
					Visibility="{Binding ElementName=root, Path=ForceCrosshairs, Converter={StaticResource VisibleIfNullConverter}}" />
				<MenuItem
					Header="Tooltip"
					IsCheckable="True"
					IsChecked="{Binding Path=ShowTooltip, ElementName=root, Mode=TwoWay}"
					Visibility="{Binding ElementName=root, Path=ForceTooltip, Converter={StaticResource VisibleIfNullConverter}}" />
				<MenuItem
					Header="Point indicators"
					IsCheckable="True"
					IsChecked="{Binding Path=ShowPointIndicators, ElementName=root, Mode=TwoWay}"
					Visibility="{Binding ElementName=root, Path=ForcePointIndicators, Converter={StaticResource VisibleIfNullConverter}}" />
			</ContextMenu>
		</Grid.ContextMenu>
		<Border
			x:Name="XCrosshair"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Top"
			BorderThickness="0,1,0,0"
			IsHitTestVisible="False">
			<Border.BorderBrush>
				<DrawingBrush
					TileMode="Tile"
					Viewport="0,0,12,12"
					ViewportUnits="Absolute">
					<DrawingBrush.Drawing>
						<DrawingGroup>
							<GeometryDrawing Brush="{DynamicResource StatusTextBrush}">
								<GeometryDrawing.Geometry>
									<GeometryGroup>
										<RectangleGeometry Rect="0,0,50,50" />
										<RectangleGeometry Rect="50,50,50,50" />
									</GeometryGroup>
								</GeometryDrawing.Geometry>
							</GeometryDrawing>
						</DrawingGroup>
					</DrawingBrush.Drawing>
				</DrawingBrush>
			</Border.BorderBrush>
			<Border.Visibility>
				<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
					<Binding ElementName="root" Path="IsMouseOverThis" UpdateSourceTrigger="PropertyChanged" />
					<Binding ElementName="root" Path="ShowCrosshairs" />
				</MultiBinding>
			</Border.Visibility>
		</Border>
		<Border
			x:Name="YCrosshair"
			HorizontalAlignment="Left"
			VerticalAlignment="Stretch"
			BorderThickness="0,0,1,0"
			IsHitTestVisible="False">
			<Border.BorderBrush>
				<DrawingBrush
					TileMode="Tile"
					Viewport="0,0,12,12"
					ViewportUnits="Absolute">
					<DrawingBrush.Drawing>
						<DrawingGroup>
							<GeometryDrawing Brush="{DynamicResource StatusTextBrush}">
								<GeometryDrawing.Geometry>
									<GeometryGroup>
										<RectangleGeometry Rect="0,0,50,50" />
										<RectangleGeometry Rect="50,50,50,50" />
									</GeometryGroup>
								</GeometryDrawing.Geometry>
							</GeometryDrawing>
						</DrawingGroup>
					</DrawingBrush.Drawing>
				</DrawingBrush>
			</Border.BorderBrush>
			<Border.Visibility>
				<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
					<Binding ElementName="root" Path="IsMouseOverThis" UpdateSourceTrigger="PropertyChanged" />
					<Binding ElementName="root" Path="ShowCrosshairs" />
				</MultiBinding>
			</Border.Visibility>
		</Border>
		<Border
			x:Name="SelectionRangeBorder"
			HorizontalAlignment="Left"
			Background="{DynamicResource StatusTextLightBrush}"
			BorderBrush="{DynamicResource TextBrush}"
			BorderThickness="1,0,1,0"
			IsHitTestVisible="False"
			Opacity="0.3">
			<Border.Visibility>
				<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
					<Binding ElementName="root" Path="IsUserSelectingRange" />
					<Binding ElementName="root" Path="AllowSelection" />
				</MultiBinding>
			</Border.Visibility>
		</Border>
		<Grid
			Margin="0,0,-200,-200"
			HorizontalAlignment="Stretch"
			VerticalAlignment="Stretch"
			IsHitTestVisible="False"
			Visibility="{Binding ElementName=root, Path=IsMouseOverThis, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibleIfTrueConverter}}">
			<ItemsControl
				x:Name="TooltipLines"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				ItemsSource="{Binding TooltipPoints, ElementName=root}"
				Visibility="{Binding ElementName=root, Path=ShowPointIndicators, Converter={StaticResource VisibleIfTrueConverter}}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid Height="{Binding ElementName=Grid, Path=ActualHeight}">
							<Grid.Margin>
								<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
									<Binding Path="." />
									<Binding ElementName="root" Path="TooltipPoints" />
									<Binding ElementName="Grid" Path="ActualHeight" />
								</MultiBinding>
							</Grid.Margin>
							<Border
								Width="{Binding ElementName=Grid, Path=ActualWidth}"
								Height="{Binding LocationY}"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								BorderBrush="{DynamicResource StatusTextBrush}"
								BorderThickness="0,0,0,1"
								IsHitTestVisible="False">
								<Border.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsNearest}" Value="False">
												<Setter Property="Border.Opacity" Value="0.5" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Border.Style>
							</Border>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<ItemsControl
				x:Name="HighlightedPoints"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				ItemsSource="{Binding TooltipPoints, ElementName=root}"
				Visibility="{Binding ElementName=root, Path=ShowPointIndicators, Converter={StaticResource VisibleIfTrueConverter}}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid Height="{Binding ElementName=Grid, Path=ActualHeight}">
							<Grid.Margin>
								<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
									<Binding Path="." />
									<Binding ElementName="root" Path="TooltipPoints" />
									<Binding ElementName="Grid" Path="ActualHeight" />
								</MultiBinding>
							</Grid.Margin>
							<Ellipse
								Width="30"
								Height="30"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Fill="{DynamicResource TextBrush}"
								IsHitTestVisible="False"
								Opacity="0.1"
								Visibility="{Binding IsNearest, Converter={StaticResource VisibleIfTrueConverter}}">
								<Ellipse.Margin>
									<MultiBinding Converter="{StaticResource PointHighlightMarginConverter}" ConverterParameter="15">
										<Binding Path="LocationY" />
										<Binding Path="LocationX" />
									</MultiBinding>
								</Ellipse.Margin>
							</Ellipse>
							<Ellipse
								x:Name="SelectedEllipse"
								Width="10"
								Height="10"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								IsHitTestVisible="False"
								Opacity="0"
								RenderTransformOrigin="0.5,0.5"
								Stroke="{DynamicResource TextBrush}"
								StrokeThickness="1">
								<Ellipse.Margin>
									<MultiBinding Converter="{StaticResource PointHighlightMarginConverter}" ConverterParameter="5">
										<Binding Path="LocationY" />
										<Binding Path="LocationX" />
									</MultiBinding>
								</Ellipse.Margin>
								<Ellipse.RenderTransform>
									<ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1" />
								</Ellipse.RenderTransform>
								<!--<Ellipse.Style>
									<Style>
										<Style.Triggers>
											<DataTrigger Binding="{Binding Path=WasClicked}" Value="True">
												<DataTrigger.EnterActions>
													<BeginStoryboard>
														<Storyboard>
															<DoubleAnimation
																AutoReverse="False"
																Storyboard.TargetProperty="RenderTransform.ScaleX"
																From="1"
																To="3"
																Duration="0:0:0.3">
																<DoubleAnimation.EasingFunction>
																	<CubicEase />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
															<DoubleAnimation
																AutoReverse="False"
																Storyboard.TargetProperty="RenderTransform.ScaleY"
																From="1"
																To="3"
																Duration="0:0:0.3">
																<DoubleAnimation.EasingFunction>
																	<CubicEase />
																</DoubleAnimation.EasingFunction>
															</DoubleAnimation>
															<DoubleAnimation
																AutoReverse="False"
																Storyboard.TargetProperty="Opacity"
																From="1"
																To="0"
																Duration="0:0:0.3" />
															<DoubleAnimation
																AutoReverse="False"
																Storyboard.TargetProperty="StrokeThickness"
																From="1"
																To="0"
																Duration="0:0:0.3" />
														</Storyboard>
													</BeginStoryboard>
												</DataTrigger.EnterActions>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Ellipse.Style>-->
							</Ellipse>
							<Ellipse
								Width="10"
								Height="10"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Fill="{Binding Fill}"
								IsHitTestVisible="False"
								Stroke="{DynamicResource MainBackgroundBrush}"
								StrokeThickness="1.5">
								<Ellipse.Margin>
									<MultiBinding Converter="{StaticResource PointHighlightMarginConverter}" ConverterParameter="5">
										<Binding Path="LocationY" />
										<Binding Path="LocationX" />
									</MultiBinding>
								</Ellipse.Margin>
							</Ellipse>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<ItemsControl
				x:Name="TooltipsByPoints"
				Margin="0,0,0,-100"
				HorizontalAlignment="Left"
				VerticalAlignment="Stretch"
				IsHitTestVisible="False"
				ItemsSource="{Binding TooltipPoints, ElementName=root}"
				Opacity="{Binding ElementName=root, Path=TooltipOpacity}"
				Visibility="{Binding ElementName=root, Path=IsTooltipByCursor, Converter={StaticResource VisibleIfFalseConverter}, ConverterParameter=Hidden}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid Height="{Binding ElementName=Grid, Path=ActualHeight, ConverterParameter=100, Converter={StaticResource ValueAdderConverter}}">
							<Grid.Margin>
								<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
									<Binding IsAsync="True" Path="." />
									<Binding
										ElementName="root"
										IsAsync="True"
										Path="TooltipPoints" />
									<Binding
										Converter="{StaticResource ValueAdderConverter}"
										ConverterParameter="100"
										ElementName="Grid"
										IsAsync="True"
										Path="ActualHeight" />
								</MultiBinding>
							</Grid.Margin>
							<Grid
								x:Name="PointTooltipGrid"
								HorizontalAlignment="Left"
								VerticalAlignment="Top">
								<Grid.Margin>
									<MultiBinding Converter="{StaticResource PointToolTipConverter}">
										<Binding Path="LocationX" />
										<Binding Path="LocationY" />
										<Binding ElementName="PointTooltipGrid" Path="ActualWidth" />
										<Binding ElementName="PointTooltipGrid" Path="ActualHeight" />
										<Binding ElementName="Grid" Path="ActualWidth" />
										<Binding ElementName="Grid" Path="ActualHeight" />
										<Binding ElementName="root" Path="InvertY" />
										<Binding ElementName="root" Path="TooltipOffsetX" />
										<Binding ElementName="root" Path="TooltipOffsetY" />
									</MultiBinding>
								</Grid.Margin>
								<chartcomponents:DefaultTooltip />
							</Grid>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<ItemsControl
				x:Name="TooltipsByCursor"
				Width="Auto"
				Height="Auto"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				ItemsSource="{Binding Path=TooltipPoints, ElementName=root}"
				Visibility="{Binding ElementName=root, Path=IsTooltipByCursor, Converter={StaticResource VisibleIfTrueConverter}, ConverterParameter=Hidden}">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid
							Width="Auto"
							Height="Auto"
							Margin="3"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
							<Grid.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding
										ElementName="root"
										IsAsync="True"
										Path="ShowTooltip" />
									<Binding
										Converter="{StaticResource SequenceHasElementsBooleanConverter}"
										ElementName="root"
										IsAsync="True"
										Path="TooltipPoints" />
									<Binding
										ElementName="root"
										IsAsync="True"
										Path="IsTooltipByCursor" />
								</MultiBinding>
							</Grid.Visibility>
							<chartcomponents:DefaultTooltip />
							<chartcomponents:TemplatedTooltip />
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</Grid>
	</Grid>
</UserControl>
