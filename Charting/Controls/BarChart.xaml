<UserControl
	x:Class="ModernThemables.Charting.Controls.BarChart"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:chartComponents="clr-namespace:ModernThemables.Charting.Controls.ChartComponents"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="root"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ItemsPanelTemplate x:Key="WrapTemplate" x:Name="WrapTemplate">
			<StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal" />
		</ItemsPanelTemplate>
		<ItemsPanelTemplate x:Key="StackTemplate" x:Name="StackTemplate">
			<StackPanel />
		</ItemsPanelTemplate>
	</UserControl.Resources>
	<Grid SizeChanged="Grid_SizeChanged">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid
			x:Name="LegendGrid"
			Grid.Row="1"
			Grid.Column="2"
			Margin="0"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Cursor="Arrow">
			<Border
				Background="{DynamicResource MenuBrush}"
				BorderBrush="{DynamicResource MenuBorderBrush}"
				BorderThickness="1"
				CornerRadius="5">
				<ItemsControl x:Name="LegendItemsControl" ItemsSource="{Binding ElementName=root, Path=Series}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<WrapPanel Margin="2,5">
								<Border
									Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
									Height="15"
									Margin="5,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Stretch"
									Background="{Binding Fill.CoreBrush}"
									BorderBrush="{Binding Stroke.CoreBrush}"
									BorderThickness="2"
									CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
								<TextBlock
									Margin="5,0,10,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Foreground="{DynamicResource TextBrush}"
									Text="{Binding Name}" />
							</WrapPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</Grid>
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			Margin="0">
			<Grid.ContextMenu>
				<ContextMenu x:Name="ContextMenu">
					<MenuItem
						Header="Tooltip"
						IsCheckable="True"
						IsChecked="{Binding Path=IsTooltipVisible, ElementName=root, Mode=TwoWay}" />
				</ContextMenu>
			</Grid.ContextMenu>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" MinHeight="5" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" MinWidth="5" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<chartComponents:AxisControl
				VerticalAlignment="Stretch"
				HorizontalAlignment="Stretch"
				BorderBrush="{DynamicResource StatusTextLightBrush}"
				ShowDividers="False"
				Foreground="{DynamicResource StatusTextBrush}"
				Labels="{Binding ElementName=root, Path=YAxisLabels}"
				Orientation="Vertical" />
			<chartComponents:AxisControl
				Grid.Row="1"
				Grid.Column="1"
				BorderBrush="{DynamicResource StatusTextLightBrush}"
				DividerOffset="{Binding ElementName=root, Path=GroupWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
				Foreground="{DynamicResource StatusTextBrush}"
				LabelRotation="90"
				Labels="{Binding ElementName=root, Path=XAxisLabels}"
				Orientation="Horizontal" />
			<Grid x:Name="Grid" Grid.Column="1">
				<ItemsControl ItemsSource="{Binding YAxisLabels, ElementName=root}" Visibility="{Binding ElementName=root, Path=ShowYSeparatorLines, Converter={StaticResource VisibleIfTrueConverter}}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel VerticalAlignment="Bottom" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Border
								Height="{Binding Location}"
								BorderBrush="{DynamicResource StatusTextLightBrush}"
								BorderThickness="0,1,0,0" />
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				<Grid Width="{Binding ElementName=Grid, Path=ActualWidth}" Height="{Binding ElementName=Grid, Path=ActualHeight}">
					<ItemsControl
						x:Name="SeriesItemsControl"
						Margin="3,0,0,0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						HorizontalContentAlignment="Stretch"
						ItemsSource="{Binding InternalSeries, ElementName=root}"
						RenderTransformOrigin="0.5,0.5">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid HorizontalAlignment="Left" VerticalAlignment="Bottom">
									<Border
										Width="{Binding BarWidth, ElementName=root}"
										Height="{Binding Y}"
										Margin="{Binding X, Converter={StaticResource DoubleToBorderThicknessConverter}, ConverterParameter=1-0-0-0}"
										HorizontalAlignment="Left"
										VerticalAlignment="Bottom"
										Background="Transparent"
										BorderBrush="{Binding Stroke.CoreBrush}"
										BorderThickness="1"
										CornerRadius="{Binding ElementName=root, Path=BarCornerRadius}"
										RenderTransformOrigin="0.5,0.93">
										<Border
											HorizontalAlignment="Stretch"
											VerticalAlignment="Stretch"
											Background="{Binding Fill.CoreBrush}"
											BorderBrush="{Binding Stroke.CoreBrush}"
											BorderThickness="1">
											<Border.Style>
												<Style TargetType="{x:Type Border}">
													<Style.Triggers>
														<DataTrigger Binding="{Binding IsMouseOver}" Value="True">
															<DataTrigger.EnterActions>
																<BeginStoryboard>
																	<Storyboard>
																		<ThicknessAnimation
																			Storyboard.TargetProperty="Margin"
																			To="3,0,3,3"
																			Duration="00:00:00.15">
																			<ThicknessAnimation.EasingFunction>
																				<BackEase Amplitude="1" EasingMode="EaseOut" />
																			</ThicknessAnimation.EasingFunction>
																		</ThicknessAnimation>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.EnterActions>
															<DataTrigger.ExitActions>
																<BeginStoryboard>
																	<Storyboard>
																		<ThicknessAnimation
																			Storyboard.TargetProperty="Margin"
																			To="0"
																			Duration="00:00:00.10">
																			<ThicknessAnimation.EasingFunction>
																				<BackEase Amplitude="1" EasingMode="EaseOut" />
																			</ThicknessAnimation.EasingFunction>
																		</ThicknessAnimation>
																	</Storyboard>
																</BeginStoryboard>
															</DataTrigger.ExitActions>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Border.Style>
										</Border>
									</Border>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
						<ItemsControl.RenderTransform>
							<ScaleTransform ScaleY="-1" />
						</ItemsControl.RenderTransform>
					</ItemsControl>
				</Grid>
				<Grid
					x:Name="MouseCaptureGrid"
					Background="{DynamicResource MainBackgroundBrush}"
					MouseLeave="MouseCaptureGrid_MouseLeave"
					MouseMove="MouseCaptureGrid_MouseMove"
					Opacity="0.001" />
				<Border
					x:Name="DrawableChartSectionBorder"
					BorderBrush="{DynamicResource StatusTextLightBrush}"
					BorderThickness="1,0,0,1"
					IsHitTestVisible="False" />
			</Grid>
		</Grid>
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			Width="{Binding ElementName=DrawableChartSectionBorder, Path=ActualWidth}"
			Height="{Binding ElementName=DrawableChartSectionBorder, Path=ActualHeight}"
			HorizontalAlignment="Right"
			VerticalAlignment="Top">
			<Grid
				x:Name="TooltipGrid"
				Grid.ColumnSpan="10"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
				<Border
					Width="Auto"
					Height="Auto"
					Margin="3"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="root" Path="IsTooltipVisible" />
							<Binding
								Converter="{StaticResource IsNotNullConverter}"
								ElementName="root"
								Path="TooltipBar" />
						</MultiBinding>
					</Border.Visibility>
					<Grid>
						<Border
							Padding="5"
							Background="{DynamicResource MenuBrush}"
							BorderBrush="{DynamicResource MenuBorderBrush}"
							BorderThickness="1"
							CornerRadius="5"
							Visibility="{Binding ElementName=ContentControl, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<TextBlock
									Grid.RowSpan="2"
									Margin="3,3,10,3"
									VerticalAlignment="Center"
									FontSize="20"
									FontWeight="DemiBold"
									Foreground="{DynamicResource TextBrush}"
									Text="{Binding ElementName=root, Path=TooltipBar.DisplayValue}" />
								<TextBlock
									Grid.Column="1"
									FontWeight="Bold"
									Foreground="{DynamicResource TextBrush}"
									Text="{Binding ElementName=root, Path=TooltipBar.BackingPoint.Name}" />
								<TextBlock
									Grid.Row="1"
									Grid.Column="1"
									Foreground="{DynamicResource TextBrush}"
									Text="{Binding ElementName=root, Path=TooltipString}" />
							</Grid>
						</Border>
						<Border
							BorderBrush="{Binding ElementName=root, Path=TooltipBar.Fill.CoreBrush}"
							BorderThickness="2,0,0,0"
							CornerRadius="5"
							IsHitTestVisible="False">
							<ContentControl
								x:Name="ContentControl"
								Content="{Binding Path=TooltipString, UpdateSourceTrigger=PropertyChanged}"
								ContentTemplate="{Binding ElementName=root, Path=TooltipTemplate}"
								Visibility="{Binding ElementName=root, Path=TooltipTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
						</Border>
					</Grid>
				</Border>
			</Grid>
		</Grid>
	</Grid>
</UserControl>