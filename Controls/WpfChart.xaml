<UserControl
	x:Class="ModernThemables.Controls.WpfChart"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:ModernThemables.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="root"
	mc:Ignorable="d">
	<Grid ContextMenuOpening="Grid_ContextMenuOpening" SizeChanged="Grid_SizeChanged">
		<Grid.ContextMenu>
			<ContextMenu x:Name="ContextMenu">
				<MenuItem
					Header="Crosshair"
					IsCheckable="True"
					IsChecked="{Binding Path=IsCrosshairVisible, ElementName=root, Mode=TwoWay}" />
				<MenuItem
					Header="Tooltip"
					IsCheckable="True"
					IsChecked="{Binding Path=IsTooltipVisible, ElementName=root, Mode=TwoWay}" />
				<MenuItem
					Header="Axis indicators"
					IsCheckable="True"
					IsChecked="{Binding Path=IsAxisIndicatorsVisible, ElementName=root, Mode=TwoWay}" />
				<MenuItem
					Header="Point indicators"
					IsCheckable="True"
					IsChecked="{Binding Path=IsPointIndicatorsVisible, ElementName=root, Mode=TwoWay}" />
			</ContextMenu>
		</Grid.ContextMenu>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition
				x:Name="XAxisRow"
				Height="Auto"
				MinHeight="5" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition
				x:Name="YAxisColumn"
				Width="Auto"
				MinWidth="5" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<ItemsControl
			x:Name="YAxisItemsControl"
			Width="Auto"
			Margin="5,0,5,0"
			ItemsSource="{Binding YAxisLabels, ElementName=root}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel VerticalAlignment="Bottom" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<Grid Height="{Binding Height}">
						<TextBlock
							Height="12"
							Margin="0,-6,0,0"
							VerticalAlignment="Top"
							FontSize="11"
							FontWeight="Medium"
							Foreground="{DynamicResource StatusTextBrush}"
							Text="{Binding Value}"
							TextAlignment="Right" />
					</Grid>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
		<Border
			Grid.Row="1"
			Grid.Column="1"
			BorderBrush="{DynamicResource StatusTextLightBrush}"
			BorderThickness="1,0,0,0"
			IsHitTestVisible="False">
			<ItemsControl
				x:Name="XAxisItemsControl"
				Height="16"
				Margin="0,3,-5,2"
				ItemsSource="{Binding XAxisLabels, ElementName=root}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid Width="{Binding Height}">
							<TextBlock
								Width="50"
								Height="12"
								Margin="0,0,-25,0"
								HorizontalAlignment="Right"
								FontSize="11"
								FontWeight="Medium"
								Foreground="{DynamicResource StatusTextBrush}"
								Text="{Binding Value}"
								TextAlignment="Center" />
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</Border>
		<Grid x:Name="Grid" Grid.Column="1">
			<ItemsControl ItemsSource="{Binding YAxisLabels, ElementName=root}" Visibility="{Binding ElementName=root, Path=ShowYSeparatorLines, Converter={StaticResource VisibleIfTrueConverter}}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel VerticalAlignment="Bottom" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Border
							Height="{Binding Height}"
							BorderBrush="{DynamicResource StatusTextLightBrush}"
							BorderThickness="0,1,0,0" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<ItemsControl ItemsSource="{Binding XAxisLabels, ElementName=root}" Visibility="{Binding ElementName=root, Path=ShowXSeparatorLines, Converter={StaticResource VisibleIfTrueConverter}}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<WrapPanel HorizontalAlignment="Left" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Border
							Width="{Binding Height}"
							Height="{Binding ElementName=Grid, Path=ActualHeight}"
							BorderBrush="{DynamicResource StatusTextLightBrush}"
							BorderThickness="0,0,1,0" />
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<Grid
				Width="{Binding ElementName=Grid, Path=ActualWidth}"
				Height="{Binding ElementName=Grid, Path=ActualHeight}"
				ClipToBounds="True">
				<ItemsControl
					x:Name="SeriesItemsControl"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					ItemsSource="{Binding ConvertedSeries, ElementName=root}">
					<ItemsControl.Margin>
						<MultiBinding x:Name="SeriesMultiBinding" Converter="{StaticResource ChartZoomConverter}">
							<Binding ElementName="root" Path="CurrentZoomState" />
							<Binding ElementName="root" Path="Series" />
							<Binding ElementName="Grid" />
						</MultiBinding>
					</ItemsControl.Margin>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid Height="{Binding ElementName=SeriesItemsControl, Path=ActualHeight}">
								<Path
									Data="{Binding PathFillData}"
									Fill="{Binding Fill.CoreBrush}"
									IsHitTestVisible="False"
									Stretch="Fill"
									StrokeLineJoin="Bevel"
									StrokeThickness="1.5" />
								<Path
									Data="{Binding PathStrokeData}"
									IsHitTestVisible="False"
									Stretch="Fill"
									Stroke="{Binding Stroke.CoreBrush}"
									StrokeLineJoin="Bevel"
									StrokeThickness="1.5" />
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Grid>
			<Line
				x:Name="XPointHighlighter"
				Margin="0,100,0,0"
				IsHitTestVisible="False"
				Stroke="{DynamicResource StatusTextBrush}"
				StrokeThickness="1"
				X2="{Binding ActualWidth, ElementName=Grid}">
				<Line.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsPointIndicatorsVisible" />
						<Binding
							Converter="{StaticResource IsNotNullConverter}"
							ElementName="root"
							Path="HoveredPoint" />
					</MultiBinding>
				</Line.Visibility>
			</Line>
			<Border
				x:Name="SelectionRangeBorder"
				HorizontalAlignment="Left"
				Background="{DynamicResource StatusTextLightBrush}"
				BorderBrush="{DynamicResource TextBrush}"
				BorderThickness="1,0,1,0"
				Opacity="0.3"
				Visibility="{Binding ElementName=root, Path=IsUserSelectingRange, Converter={StaticResource VisibleIfTrueConverter}}" />
			<Line
				x:Name="XCrosshair"
				Margin="0,50,0,0"
				IsHitTestVisible="False"
				Stroke="{DynamicResource StatusTextBrush}"
				StrokeDashArray="8,8"
				StrokeThickness="1"
				X2="{Binding ActualWidth, ElementName=Grid}">
				<Line.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsCrosshairVisible" />
					</MultiBinding>
				</Line.Visibility>
			</Line>
			<Line
				x:Name="YCrosshair"
				Margin="50,0,0,0"
				IsHitTestVisible="False"
				Stroke="{DynamicResource StatusTextBrush}"
				StrokeDashArray="8,8"
				StrokeThickness="1"
				Y2="{Binding ActualHeight, ElementName=Grid}">
				<Line.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsCrosshairVisible" />
					</MultiBinding>
				</Line.Visibility>
			</Line>
			<Grid
				x:Name="MouseCaptureGrid"
				Background="{DynamicResource MainBackgroundBrush}"
				MouseMove="MouseCaptureGrid_MouseMove"
				MouseWheel="MouseCaptureGrid_MouseWheel"
				Opacity="0.001"
				PreviewMouseDown="MouseCaptureGrid_PreviewMouseDown"
				PreviewMouseUp="MouseCaptureGrid_PreviewMouseUp" />
			<Border
				x:Name="DrawableChartSectionBorder"
				BorderBrush="{DynamicResource StatusTextLightBrush}"
				BorderThickness="1,0,0,1"
				IsHitTestVisible="False" />
			<Border
				x:Name="XCrosshairValueDisplay"
				Width="Auto"
				Height="20"
				HorizontalAlignment="Left"
				VerticalAlignment="Bottom"
				Background="{DynamicResource StatusTextLightBrush}"
				CornerRadius="5"
				IsHitTestVisible="False">
				<Border.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsAxisIndicatorsVisible" />
					</MultiBinding>
				</Border.Visibility>
				<TextBlock
					x:Name="XCrosshairValueLabel"
					Margin="6,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontSize="11"
					Foreground="{DynamicResource TextBrush}" />
			</Border>
			<Border
				x:Name="YCrosshairValueDisplay"
				Width="Auto"
				Height="20"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Background="{DynamicResource StatusTextLightBrush}"
				CornerRadius="5"
				IsHitTestVisible="False">
				<Border.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsAxisIndicatorsVisible" />
					</MultiBinding>
				</Border.Visibility>
				<TextBlock
					x:Name="YCrosshairValueLabel"
					Margin="6,0"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					FontSize="11"
					Foreground="{DynamicResource TextBrush}" />
			</Border>
			<Border
				x:Name="TooltipBorder"
				Width="Auto"
				Height="Auto"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				Opacity="0.8">
				<Border.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding
							Converter="{StaticResource IsNotNullConverter}"
							ElementName="root"
							Path="HoveredPoint" />
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsTooltipVisible" />
					</MultiBinding>
				</Border.Visibility>
				<Grid>
					<TextBlock
						Foreground="{DynamicResource TextBrush}"
						Text="{Binding ElementName=root, Path=TooltipString}"
						Visibility="{Binding ElementName=ContentControl, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}" />
					<ContentControl
						x:Name="ContentControl"
						Content="{Binding ElementName=root, Path=TooltipString, UpdateSourceTrigger=PropertyChanged}"
						ContentTemplate="{Binding ElementName=root, Path=TooltipTemplate}"
						Visibility="{Binding ElementName=root, Path=TooltipTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
				</Grid>
			</Border>
			<Ellipse
				x:Name="PointSelectionEllipse"
				Width="10"
				Height="10"
				Margin="{Binding ElementName=HoveredPointEllipse, Path=Margin}"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				Opacity="0"
				RenderTransformOrigin="0.5,0.5"
				Stroke="{DynamicResource TextBrush}"
				StrokeThickness="1"
				Visibility="{Binding ElementName=HoveredPointEllipse, Path=Visibility}">
				<Ellipse.RenderTransform>
					<ScaleTransform x:Name="ScaleTransform" />
				</Ellipse.RenderTransform>
			</Ellipse>
			<Ellipse
				x:Name="HoveredPointEllipse"
				Width="10"
				Height="10"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				Stroke="{DynamicResource MainBackgroundBrush}"
				StrokeThickness="1.5">
				<Ellipse.Visibility>
					<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
						<Binding
							Converter="{StaticResource IsNotNullConverter}"
							ElementName="root"
							Path="HoveredPoint" />
						<Binding ElementName="Grid" Path="IsMouseOver" />
						<Binding ElementName="root" Path="IsTooltipVisible" />
						<Binding ElementName="root" Path="IsPointIndicatorsVisible" />
					</MultiBinding>
				</Ellipse.Visibility>
			</Ellipse>
		</Grid>
	</Grid>
</UserControl>