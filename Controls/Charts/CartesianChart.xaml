<UserControl
	x:Class="ModernThemables.Controls.CartesianChart"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:ModernThemables.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	x:Name="root"
	FontSize="{Binding ElementName=root, Path=FontSize}"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ItemsPanelTemplate x:Key="WrapTemplate" x:Name="WrapTemplate">
			<WrapPanel />
		</ItemsPanelTemplate>
		<ItemsPanelTemplate x:Key="StackTemplate" x:Name="StackTemplate">
			<StackPanel />
		</ItemsPanelTemplate>
	</UserControl.Resources>
	<Grid SizeChanged="Grid_SizeChanged">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid
			x:Name="LegendGrid"
			Grid.Row="1"
			Grid.Column="2"
			Margin="0"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Cursor="Arrow">
			<Border
				Background="{DynamicResource MenuBrush}"
				BorderBrush="{DynamicResource MenuBorderBrush}"
				BorderThickness="1"
				CornerRadius="5">
				<ItemsControl x:Name="LegendItemsControl" ItemsSource="{Binding ElementName=root, Path=InternalSeries}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<WrapPanel Margin="2,5">
								<Border
									Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
									Height="15"
									Margin="5,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Stretch"
									Background="{Binding Fill.CoreBrush}"
									BorderBrush="{Binding Stroke.CoreBrush}"
									BorderThickness="2"
									CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
								<TextBlock
									Margin="5,0,10,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									Foreground="{DynamicResource TextBrush}"
									Text="{Binding Name}" />
							</WrapPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</Grid>
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			Margin="0"
			ContextMenuOpening="Grid_ContextMenuOpening">
			<Grid.ContextMenu>
				<ContextMenu x:Name="ContextMenu">
					<MenuItem
						Header="Crosshair"
						IsCheckable="True"
						IsChecked="{Binding Path=IsCrosshairVisible, ElementName=root, Mode=TwoWay}" />
					<MenuItem
						Header="Tooltip"
						IsCheckable="True"
						IsChecked="{Binding Path=IsTooltipVisible, ElementName=root, Mode=TwoWay}" />
					<MenuItem
						Header="Axis indicators"
						IsCheckable="True"
						IsChecked="{Binding Path=IsAxisIndicatorsVisible, ElementName=root, Mode=TwoWay}" />
					<MenuItem
						Header="Point indicators"
						IsCheckable="True"
						IsChecked="{Binding Path=IsPointIndicatorsVisible, ElementName=root, Mode=TwoWay}" />
				</ContextMenu>
			</Grid.ContextMenu>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition
					x:Name="XAxisRow"
					Height="Auto"
					MinHeight="5" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					x:Name="YAxisColumn"
					Width="Auto"
					MinWidth="5" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<ItemsControl
				x:Name="YAxisItemsControl"
				Width="Auto"
				Margin="5,0,5,0"
				ItemsSource="{Binding YAxisLabels, ElementName=root}"
				SizeChanged="YAxisItemsControl_SizeChanged">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel VerticalAlignment="Bottom" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid Height="{Binding Height}">
							<TextBlock
								Height="12"
								Margin="0,-6,0,0"
								VerticalAlignment="Top"
								FontSize="11"
								FontWeight="Medium"
								Foreground="{DynamicResource StatusTextBrush}"
								Text="{Binding Value}"
								TextAlignment="Right" />
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
			<Border
				Grid.Row="1"
				Grid.Column="1"
				BorderBrush="{DynamicResource StatusTextLightBrush}"
				BorderThickness="1,0,0,0"
				ClipToBounds="True"
				IsHitTestVisible="False">
				<ItemsControl
					x:Name="XAxisItemsControl"
					Height="16"
					Margin="0,3,-5,2"
					ItemsSource="{Binding XAxisLabels, ElementName=root}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid Width="{Binding Height}">
								<TextBlock
									Width="70"
									Height="12"
									Margin="0,0,-35,0"
									HorizontalAlignment="Right"
									FontSize="11"
									FontWeight="Medium"
									Foreground="{DynamicResource StatusTextBrush}"
									Text="{Binding Value}"
									TextAlignment="Center" />
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
			<Grid x:Name="Grid" Grid.Column="1">
				<ItemsControl ItemsSource="{Binding YAxisLabels, ElementName=root}" Visibility="{Binding ElementName=root, Path=ShowYSeparatorLines, Converter={StaticResource VisibleIfTrueConverter}}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<StackPanel VerticalAlignment="Bottom" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Border
								Height="{Binding Height}"
								BorderBrush="{DynamicResource StatusTextLightBrush}"
								BorderThickness="0,1,0,0" />
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				<ItemsControl ItemsSource="{Binding XAxisLabels, ElementName=root}" Visibility="{Binding ElementName=root, Path=ShowXSeparatorLines, Converter={StaticResource VisibleIfTrueConverter}}">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel HorizontalAlignment="Left" />
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Border
								Width="{Binding Height}"
								Height="{Binding ElementName=Grid, Path=ActualHeight}"
								BorderBrush="{DynamicResource StatusTextLightBrush}"
								BorderThickness="0,0,1,0" />
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				<Grid
					Width="{Binding ElementName=Grid, Path=ActualWidth}"
					Height="{Binding ElementName=Grid, Path=ActualHeight}"
					ClipToBounds="True">
					<ItemsControl
						x:Name="SeriesItemsControl"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						ItemsSource="{Binding InternalSeries, ElementName=root}">
						<ItemsControl.Margin>
							<MultiBinding x:Name="SeriesMultiBinding" Converter="{StaticResource ChartZoomConverter}">
								<Binding ElementName="root" Path="CurrentZoomState" />
								<Binding ElementName="root" Path="Series" />
								<Binding ElementName="Grid" />
							</MultiBinding>
						</ItemsControl.Margin>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid Height="{Binding ElementName=SeriesItemsControl, Path=ActualHeight}">
									<Grid.Margin>
										<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
											<Binding Path="." />
											<Binding ElementName="root" Path="InternalSeries" />
											<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
											<Binding Path="ResizeTrigger" />
										</MultiBinding>
									</Grid.Margin>
									<Grid>
										<Grid.Margin>
											<MultiBinding Converter="{StaticResource SeriesHeightMarginConverter}">
												<Binding Path="." />
												<Binding ElementName="root" Path="InternalSeries" />
												<Binding ElementName="Grid" Path="ActualWidth" />
												<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
												<Binding ElementName="Grid" Path="ActualHeight" />
												<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
												<Binding Path="ResizeTrigger" />
											</MultiBinding>
										</Grid.Margin>
										<Path
											Data="{Binding PathFillData, UpdateSourceTrigger=PropertyChanged}"
											Fill="{Binding Fill.CoreBrush}"
											IsHitTestVisible="False"
											Stretch="Fill"
											StrokeLineJoin="Bevel"
											StrokeThickness="1.5" />
										<Path
											Data="{Binding PathStrokeData, UpdateSourceTrigger=PropertyChanged}"
											IsHitTestVisible="False"
											Stretch="Fill"
											Stroke="{Binding Stroke.CoreBrush}"
											StrokeLineJoin="Bevel"
											StrokeThickness="1.5" />
									</Grid>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
				<Border
					x:Name="SelectionRangeBorder"
					HorizontalAlignment="Left"
					Background="{DynamicResource StatusTextLightBrush}"
					BorderBrush="{DynamicResource TextBrush}"
					BorderThickness="1,0,1,0"
					Opacity="0.3"
					Visibility="{Binding ElementName=root, Path=IsUserSelectingRange, Converter={StaticResource VisibleIfTrueConverter}}" />
				<Border
					x:Name="XCrosshair"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Top"
					BorderThickness="0,1,0,0"
					IsHitTestVisible="False">
					<Border.BorderBrush>
						<DrawingBrush
							TileMode="Tile"
							Viewport="0,0,12,12"
							ViewportUnits="Absolute">
							<DrawingBrush.Drawing>
								<DrawingGroup>
									<GeometryDrawing Brush="{DynamicResource StatusTextBrush}">
										<GeometryDrawing.Geometry>
											<GeometryGroup>
												<RectangleGeometry Rect="0,0,50,50" />
												<RectangleGeometry Rect="50,50,50,50" />
											</GeometryGroup>
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
								</DrawingGroup>
							</DrawingBrush.Drawing>
						</DrawingBrush>
					</Border.BorderBrush>
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="IsCrosshairVisible" />
							<Binding ElementName="root" Path="HasData" />
						</MultiBinding>
					</Border.Visibility>
				</Border>
				<Border
					x:Name="YCrosshair"
					HorizontalAlignment="Left"
					VerticalAlignment="Stretch"
					BorderThickness="0,0,1,0"
					IsHitTestVisible="False">
					<Border.BorderBrush>
						<DrawingBrush
							TileMode="Tile"
							Viewport="0,0,12,12"
							ViewportUnits="Absolute">
							<DrawingBrush.Drawing>
								<DrawingGroup>
									<GeometryDrawing Brush="{DynamicResource StatusTextBrush}">
										<GeometryDrawing.Geometry>
											<GeometryGroup>
												<RectangleGeometry Rect="0,0,50,50" />
												<RectangleGeometry Rect="50,50,50,50" />
											</GeometryGroup>
										</GeometryDrawing.Geometry>
									</GeometryDrawing>
								</DrawingGroup>
							</DrawingBrush.Drawing>
						</DrawingBrush>
					</Border.BorderBrush>
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="IsCrosshairVisible" />
							<Binding ElementName="root" Path="HasData" />
						</MultiBinding>
					</Border.Visibility>
				</Border>
				<Grid
					x:Name="MouseCaptureGrid"
					Background="{DynamicResource MainBackgroundBrush}"
					MouseMove="MouseCaptureGrid_MouseMove"
					MouseWheel="MouseCaptureGrid_MouseWheel"
					Opacity="0.001"
					PreviewMouseDown="MouseCaptureGrid_PreviewMouseDown"
					PreviewMouseUp="MouseCaptureGrid_PreviewMouseUp" />
				<Border
					x:Name="DrawableChartSectionBorder"
					BorderBrush="{DynamicResource StatusTextLightBrush}"
					BorderThickness="1,0,0,1"
					IsHitTestVisible="False" />
				<Grid>
					<Grid.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="HasData" />
						</MultiBinding>
					</Grid.Visibility>
					<ItemsControl
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						ItemsSource="{Binding TooltipPoints, ElementName=root}"
						Visibility="{Binding ElementName=root, Path=IsPointIndicatorsVisible, Converter={StaticResource VisibleIfTrueConverter}}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid Height="{Binding ElementName=Grid, Path=ActualHeight}">
									<Grid.Margin>
										<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
											<Binding Path="." />
											<Binding ElementName="root" Path="TooltipPoints" />
											<Binding ElementName="Grid" Path="ActualHeight" />
										</MultiBinding>
									</Grid.Margin>
									<Border
										Height="{Binding IndicatorHeight}"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Top"
										BorderBrush="{DynamicResource StatusTextBrush}"
										BorderThickness="0,0,0,1"
										IsHitTestVisible="False">
										<Border.Style>
											<Style>
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsNearest}" Value="False">
														<Setter Property="Border.Opacity" Value="0.5" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Border.Style>
									</Border>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
					<ItemsControl
						HorizontalAlignment="Stretch"
						VerticalAlignment="Stretch"
						ItemsSource="{Binding TooltipPoints, ElementName=root}"
						Visibility="{Binding ElementName=root, Path=IsPointIndicatorsVisible, Converter={StaticResource VisibleIfTrueConverter}}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid Height="{Binding ElementName=Grid, Path=ActualHeight}">
									<Grid.Margin>
										<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
											<Binding Path="." />
											<Binding ElementName="root" Path="TooltipPoints" />
											<Binding ElementName="Grid" Path="ActualHeight" />
										</MultiBinding>
									</Grid.Margin>
									<Ellipse
										x:Name="IsHighlightedEllipse"
										Width="30"
										Height="30"
										Margin="{Binding LargeMargin}"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										Fill="{DynamicResource TextBrush}"
										IsHitTestVisible="False"
										RenderTransformOrigin="0.5,0.5"
										StrokeThickness="1">
										<Ellipse.Style>
											<Style>
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=IsNearest}" Value="True">
														<Setter Property="Ellipse.Opacity" Value="0.1" />
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=IsNearest}" Value="False">
														<Setter Property="Ellipse.Opacity" Value="0" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Ellipse.Style>
									</Ellipse>
									<Ellipse
										Width="10"
										Height="10"
										Margin="{Binding Margin}"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										IsHitTestVisible="False"
										Opacity="0"
										RenderTransformOrigin="0.5,0.5"
										Stroke="{DynamicResource TextBrush}"
										StrokeThickness="1">
										<Ellipse.RenderTransform>
											<ScaleTransform x:Name="Scale" ScaleX="1" ScaleY="1" />
										</Ellipse.RenderTransform>
										<Ellipse.Style>
											<Style>
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=WasClicked}" Value="True">
														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation
																		AutoReverse="False"
																		Storyboard.TargetProperty="RenderTransform.ScaleX"
																		From="1"
																		To="3"
																		Duration="0:0:0.3">
																		<DoubleAnimation.EasingFunction>
																			<CubicEase />
																		</DoubleAnimation.EasingFunction>
																	</DoubleAnimation>
																	<DoubleAnimation
																		AutoReverse="False"
																		Storyboard.TargetProperty="RenderTransform.ScaleY"
																		From="1"
																		To="3"
																		Duration="0:0:0.3">
																		<DoubleAnimation.EasingFunction>
																			<CubicEase />
																		</DoubleAnimation.EasingFunction>
																	</DoubleAnimation>
																	<DoubleAnimation
																		AutoReverse="False"
																		Storyboard.TargetProperty="Opacity"
																		From="1"
																		To="0"
																		Duration="0:0:0.3" />
																	<DoubleAnimation
																		AutoReverse="False"
																		Storyboard.TargetProperty="StrokeThickness"
																		From="1"
																		To="0"
																		Duration="0:0:0.3" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Ellipse.Style>
									</Ellipse>
									<Ellipse
										Width="10"
										Height="10"
										Margin="{Binding Margin}"
										HorizontalAlignment="Left"
										VerticalAlignment="Top"
										Fill="{Binding Fill}"
										IsHitTestVisible="False"
										Stroke="{DynamicResource MainBackgroundBrush}"
										StrokeThickness="1.5" />
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
					<ItemsControl
						x:Name="TooltipPointsItemsControl"
						HorizontalAlignment="Left"
						VerticalAlignment="Stretch"
						ItemsSource="{Binding TooltipPoints, ElementName=root}"
						Visibility="{Binding ElementName=root, Path=IsPointIndicatorsVisible, Converter={StaticResource VisibleIfTrueConverter}}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid Height="{Binding ElementName=Grid, Path=ActualHeight}">
									<Grid.Margin>
										<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
											<Binding Path="." />
											<Binding ElementName="root" Path="TooltipPoints" />
											<Binding ElementName="Grid" Path="ActualHeight" />
										</MultiBinding>
									</Grid.Margin>
									<Border
										Margin="{Binding TooltipMargin}"
										HorizontalAlignment="Left"
										VerticalAlignment="Bottom"
										Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
										<Border.Visibility>
											<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
												<Binding ElementName="root" Path="IsTooltipVisible" />
												<Binding
													Converter="{StaticResource SequenceHasElementsBooleanConverter}"
													ElementName="root"
													Path="TooltipPoints" />
												<Binding
													Converter="{StaticResource BoolInverter}"
													ElementName="root"
													Path="IsTooltipByCursor" />
											</MultiBinding>
										</Border.Visibility>
										<Grid>
											<Border
												Padding="5"
												Background="{DynamicResource MenuBrush}"
												BorderBrush="{DynamicResource MenuBorderBrush}"
												BorderThickness="1"
												CornerRadius="5"
												Visibility="{Binding ElementName=ContentControl, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}">
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" />
														<ColumnDefinition Width="Auto" />
													</Grid.ColumnDefinitions>
													<Border
														Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Stretch"
														Background="{Binding Path=Fill}"
														CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
													<TextBlock
														Grid.Column="1"
														Margin="5,0"
														VerticalAlignment="Center"
														Foreground="{DynamicResource TextBrush}"
														Text="{Binding Path=TooltipString}" />
												</Grid>
											</Border>
											<Border
												BorderBrush="{Binding Path=Fill}"
												BorderThickness="2,0,0,0"
												CornerRadius="5"
												IsHitTestVisible="False">
												<ContentControl
													x:Name="ContentControl"
													Content="{Binding Path=TooltipString, UpdateSourceTrigger=PropertyChanged}"
													ContentTemplate="{Binding ElementName=root, Path=TooltipTemplate}"
													Visibility="{Binding ElementName=root, Path=TooltipTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
											</Border>
										</Grid>
									</Border>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
					<ItemsControl
						x:Name="TooltipItemsControl"
						Width="Auto"
						Height="Auto"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						ItemsSource="{Binding TooltipPoints, ElementName=root}"
						Visibility="{Binding ElementName=root, Path=IsTooltipByCursor, Converter={StaticResource VisibleIfTrueConverter}, ConverterParameter=Hidden}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border
									Width="Auto"
									Height="Auto"
									Margin="3"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
									<Border.Visibility>
										<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
											<Binding ElementName="root" Path="IsTooltipVisible" />
											<Binding
												Converter="{StaticResource SequenceHasElementsBooleanConverter}"
												ElementName="root"
												Path="TooltipPoints" />
											<Binding ElementName="root" Path="IsTooltipByCursor" />
										</MultiBinding>
									</Border.Visibility>
									<Grid>
										<Border
											Padding="5"
											Background="{DynamicResource MenuBrush}"
											BorderBrush="{DynamicResource MenuBorderBrush}"
											BorderThickness="1"
											CornerRadius="5"
											Visibility="{Binding ElementName=ContentControl, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Border
													Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
													HorizontalAlignment="Stretch"
													VerticalAlignment="Stretch"
													Background="{Binding Path=Fill}"
													CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
												<TextBlock
													Grid.Column="1"
													Margin="5,0"
													VerticalAlignment="Center"
													Foreground="{DynamicResource TextBrush}"
													Text="{Binding Path=TooltipString}" />
											</Grid>
										</Border>
										<Border
											BorderBrush="{Binding Path=Fill}"
											BorderThickness="2,0,0,0"
											CornerRadius="5"
											IsHitTestVisible="False">
											<ContentControl
												x:Name="ContentControl"
												Content="{Binding Path=TooltipString, UpdateSourceTrigger=PropertyChanged}"
												ContentTemplate="{Binding ElementName=root, Path=TooltipTemplate}"
												Visibility="{Binding ElementName=root, Path=TooltipTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
										</Border>
									</Grid>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
				<Border
					x:Name="XCrosshairValueDisplay"
					Width="Auto"
					Height="20"
					HorizontalAlignment="Left"
					VerticalAlignment="Bottom"
					Background="{DynamicResource StatusTextLightBrush}"
					CornerRadius="5"
					IsHitTestVisible="False">
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="HasData" />
							<Binding ElementName="root" Path="IsAxisIndicatorsVisible" />
						</MultiBinding>
					</Border.Visibility>
					<TextBlock
						x:Name="XCrosshairValueLabel"
						Margin="6,0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						FontSize="11"
						Foreground="{DynamicResource TextBrush}" />
				</Border>
				<Border
					x:Name="YCrosshairValueDisplay"
					Width="Auto"
					Height="20"
					HorizontalAlignment="Left"
					VerticalAlignment="Top"
					Background="{DynamicResource StatusTextLightBrush}"
					CornerRadius="5"
					IsHitTestVisible="False">
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="HasData" />
							<Binding ElementName="root" Path="IsAxisIndicatorsVisible" />
						</MultiBinding>
					</Border.Visibility>
					<TextBlock
						x:Name="YCrosshairValueLabel"
						Margin="6,0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						FontSize="11"
						Foreground="{DynamicResource TextBrush}" />
				</Border>
			</Grid>
		</Grid>
	</Grid>
</UserControl>