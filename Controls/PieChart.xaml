<UserControl
	x:Class="ModernThemables.Controls.PieChart"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:ModernThemables.Controls"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:piechart="clr-namespace:ModernThemables.HelperClasses.Charting.PieChart"
	x:Name="root"
	FontSize="{Binding ElementName=root, Path=FontSize}"
	mc:Ignorable="d">
	<UserControl.Resources>
		<ItemsPanelTemplate x:Key="WrapTemplate" x:Name="WrapTemplate">
			<WrapPanel />
		</ItemsPanelTemplate>
		<ItemsPanelTemplate x:Key="StackTemplate" x:Name="StackTemplate">
			<StackPanel />
		</ItemsPanelTemplate>
	</UserControl.Resources>
	<Grid SizeChanged="Grid_SizeChanged">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="Auto" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid
			x:Name="LegendGrid"
			Grid.Row="1"
			Grid.Column="2"
			Margin="0"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			Cursor="Arrow">
			<ContentControl
				x:Name="TemplatedLegend"
				Content="{Binding ElementName=root, Path=InternalSeries}"
				ContentTemplate="{Binding ElementName=root, Path=LegendTemplate}"
				Visibility="{Binding ElementName=root, Path=LegendTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
			<Border
				Background="{DynamicResource MenuBrush}"
				BorderBrush="{DynamicResource MenuBorderBrush}"
				BorderThickness="1"
				CornerRadius="5"
				Visibility="{Binding ElementName=TemplatedLegend, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}">
				<ScrollViewer Margin="0,5" VerticalScrollBarVisibility="Auto">
					<Grid Margin="0,-5">
						<ItemsControl x:Name="LegendItemsControl" ItemsSource="{Binding ElementName=root, Path=InternalSeries}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<ItemsControl ItemsSource="{Binding Wedges}">
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<WrapPanel Margin="2,5">
													<Border
														Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
														Height="15"
														Margin="5,0"
														HorizontalAlignment="Left"
														VerticalAlignment="Stretch"
														Background="{Binding Fill.CoreBrush}"
														BorderBrush="{Binding Stroke.CoreBrush}"
														BorderThickness="2"
														CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
													<TextBlock
														Margin="5,0,10,0"
														HorizontalAlignment="Left"
														VerticalAlignment="Center"
														Foreground="{DynamicResource TextBrush}"
														Text="{Binding Name}" />
												</WrapPanel>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Grid>
				</ScrollViewer>
			</Border>
		</Grid>
		<Grid
			Grid.Row="1"
			Grid.Column="1"
			Margin="0">
			<Grid.ContextMenu>
				<ContextMenu x:Name="ContextMenu">
					<MenuItem
						Header="Tooltip"
						IsCheckable="True"
						IsChecked="{Binding Path=IsTooltipVisible, ElementName=root, Mode=TwoWay}" />
				</ContextMenu>
			</Grid.ContextMenu>
			<Grid
				x:Name="Grid"
				Grid.Column="1"
				VerticalAlignment="Stretch">
				<Grid Width="{Binding ElementName=Grid, Path=ActualWidth}" Height="{Binding ElementName=Grid, Path=ActualHeight}">
					<ItemsControl
						x:Name="SeriesItemsControl"
						Width="{Binding ElementName=Grid, Path=ActualWidth}"
						Height="{Binding ElementName=Grid, Path=ActualHeight}"
						ItemsSource="{Binding InternalSeries, ElementName=root}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Grid Height="{Binding ElementName=SeriesItemsControl, Path=ActualHeight}">
									<ItemsControl HorizontalAlignment="Left" ItemsSource="{Binding Wedges}">
										<ItemsControl.Margin>
											<MultiBinding Converter="{StaticResource PieCentrererConverter}">
												<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
												<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
											</MultiBinding>
										</ItemsControl.Margin>
										<ItemsControl.ItemTemplate>
											<DataTemplate>
												<Grid
													Height="{Binding ElementName=SeriesItemsControl, Path=ActualHeight}"
													HorizontalAlignment="Left"
													ClipToBounds="False">
													<Grid.Margin>
														<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
															<Binding Path="." />
															<Binding ElementName="root" Path="InternalSeries" />
															<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
															<Binding Path="ResizeTrigger" />
														</MultiBinding>
													</Grid.Margin>
													<piechart:PiePiece
														ClipToBounds="False"
														InnerRadiusFraction="{Binding ElementName=root, Path=InnerRadiusFraction}"
														Fill="{Binding Fill.CoreBrush}"
														Percentage="{Binding Percent}"
														RotationAngle="{Binding StartAngle}"
														Stroke="{Binding Stroke.CoreBrush}"
														StrokeThickness="0.6">
														<piechart:PiePiece.Style>
															<Style>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding IsMouseOver}" Value="True">
																		<DataTrigger.EnterActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation
																						Storyboard.TargetProperty="PushOut"
																						To="15"
																						Duration="00:00:00.10">
																						<DoubleAnimation.EasingFunction>
																							<BackEase Amplitude="1" EasingMode="EaseOut" />
																						</DoubleAnimation.EasingFunction>
																					</DoubleAnimation>
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.EnterActions>
																		<DataTrigger.ExitActions>
																			<BeginStoryboard>
																				<Storyboard>
																					<DoubleAnimation
																						Storyboard.TargetProperty="PushOut"
																						To="0"
																						Duration="00:00:00.001" />
																				</Storyboard>
																			</BeginStoryboard>
																		</DataTrigger.ExitActions>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</piechart:PiePiece.Style>
														<piechart:PiePiece.CentreX>
															<MultiBinding Converter="{StaticResource PieCentreRadiusConverter}" ConverterParameter="CentreX">
																<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
																<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
																<Binding Path="ResizeTrigger" />
															</MultiBinding>
														</piechart:PiePiece.CentreX>
														<piechart:PiePiece.CentreY>
															<MultiBinding Converter="{StaticResource PieCentreRadiusConverter}" ConverterParameter="CentreY">
																<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
																<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
																<Binding Path="ResizeTrigger" />
															</MultiBinding>
														</piechart:PiePiece.CentreY>
														<piechart:PiePiece.Radius>
															<MultiBinding Converter="{StaticResource PieCentreRadiusConverter}" ConverterParameter="Radius">
																<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
																<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
																<Binding Path="ResizeTrigger" />
															</MultiBinding>
														</piechart:PiePiece.Radius>
													</piechart:PiePiece>
												</Grid>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
								</Grid>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
					<ItemsControl HorizontalAlignment="Left" ItemsSource="{Binding InternalSeries, ElementName=root}">
						<ItemsControl.Margin>
							<MultiBinding Converter="{StaticResource PieCentrererConverter}">
								<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
								<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
							</MultiBinding>
						</ItemsControl.Margin>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding Wedges}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Grid Height="{Binding ElementName=SeriesItemsControl, Path=ActualHeight}">
												<Grid.Margin>
													<MultiBinding Converter="{StaticResource SeriesOverlapMarginConverter}">
														<Binding Path="." />
														<Binding ElementName="root" Path="InternalSeries" />
														<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
														<Binding Path="ResizeTrigger" />
													</MultiBinding>
												</Grid.Margin>
												<TextBlock
													Width="Auto"
													Height="Auto"
													HorizontalAlignment="Left"
													VerticalAlignment="Top"
													FontSize="12"
													Foreground="{DynamicResource TextBrush}"
													Text="{Binding Name}">
													<TextBlock.Style>
														<Style>
															<Style.Triggers>
																<DataTrigger Binding="{Binding IsMouseOver}" Value="True">
																	<Setter Property="TextBlock.FontWeight" Value="Bold" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</TextBlock.Style>
													<TextBlock.Margin>
														<MultiBinding Converter="{StaticResource PieLabelMarginConverter}">
															<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
															<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
															<Binding Path="StartAngle" />
															<Binding Path="Percent" />
															<Binding ElementName="root" Path="LabelRadiusFraction" />
															<Binding ElementName="SeriesItemsControl" Path="ActualHeight" />
															<Binding ElementName="SeriesItemsControl" Path="ActualWidth" />
															<Binding Path="IsMouseOver" />
															<Binding Path="ResizeTrigger" />
														</MultiBinding>
													</TextBlock.Margin>
												</TextBlock>
											</Grid>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
				<Grid
					x:Name="MouseCaptureGrid"
					Background="{DynamicResource MainBackgroundBrush}"
					MouseMove="MouseCaptureGrid_MouseMove"
					Opacity="0.001"
					PreviewMouseUp="MouseCaptureGrid_PreviewMouseUp" />
				<Grid>
					<Grid.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding ElementName="Grid" Path="IsMouseOver" />
							<Binding ElementName="root" Path="HasData" />
						</MultiBinding>
					</Grid.Visibility>
					<ItemsControl
						x:Name="TooltipItemsControl"
						Width="Auto"
						Height="Auto"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						ItemsSource="{Binding TooltipPoints, ElementName=root}"
						Visibility="{Binding ElementName=root, Path=IsTooltipByCursor, Converter={StaticResource VisibleIfTrueConverter}, ConverterParameter=Hidden}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<Border
									Width="Auto"
									Height="Auto"
									Margin="3"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Opacity="{Binding ElementName=root, Path=TooltipOpacity}">
									<Border.Visibility>
										<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
											<Binding ElementName="root" Path="IsTooltipVisible" />
											<Binding
												Converter="{StaticResource SequenceHasElementsBooleanConverter}"
												ElementName="root"
												Path="TooltipPoints" />
											<Binding ElementName="root" Path="IsTooltipByCursor" />
										</MultiBinding>
									</Border.Visibility>
									<Grid>
										<Border
											Padding="5"
											Background="{DynamicResource MenuBrush}"
											BorderBrush="{DynamicResource MenuBorderBrush}"
											BorderThickness="1"
											CornerRadius="5"
											Visibility="{Binding ElementName=ContentControl, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>
												<Border
													Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
													HorizontalAlignment="Stretch"
													VerticalAlignment="Stretch"
													Background="{Binding Path=Fill}"
													CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}" />
												<TextBlock
													Grid.Column="1"
													Margin="5,0"
													VerticalAlignment="Center"
													Foreground="{DynamicResource TextBrush}"
													Text="{Binding Path=TooltipString}" />
											</Grid>
										</Border>
										<Border
											BorderBrush="{Binding Path=Fill}"
											BorderThickness="2,0,0,0"
											CornerRadius="5"
											IsHitTestVisible="False">
											<ContentControl
												x:Name="ContentControl"
												Content="{Binding Path=TooltipString, UpdateSourceTrigger=PropertyChanged}"
												ContentTemplate="{Binding ElementName=root, Path=TooltipTemplate}"
												Visibility="{Binding ElementName=root, Path=TooltipTemplate, Converter={StaticResource VisibleIfNotNullConverter}}" />
										</Border>
									</Grid>
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</UserControl>